/**
 * geins-management-api-sdk-js
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PriceListModelsPriceList from '../model/PriceListModelsPriceList';
import PriceListModelsPriceListPriceResponse from '../model/PriceListModelsPriceListPriceResponse';
import PriceListModelsWritePriceListPrice from '../model/PriceListModelsWritePriceListPrice';

/**
* PriceList service.
* @module api/PriceListApi
* @version v1.7.1
*/
export default class PriceListApi {

    /**
    * Constructs a new PriceListApi. 
    * @alias module:api/PriceListApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the listPriceLists operation.
     * @callback module:api/PriceListApi~listPriceListsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PriceListModelsPriceList>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all price list definitions
     * - Prices on campaign price lists (id: xxxxxx2) can not be updated. Any such entries will be ignored.  - ID for Ordinary, Sale and Campaign price lists starts from 1000000.   The ID is calculated by this formula, Market ID * 1000000 + Type of price list (Ordinary=0, Sale=1, Capaign=2)  So :  Ordinary price list for market with ID 1 has ID = 1000000  Sale price list for market with ID 1 has ID = 1000001  Campaign price list for market with ID 1 has ID = 1000002  Ordinary price list for market with ID 2 has ID = 2000000  And so on ...
     * @param {module:api/PriceListApi~listPriceListsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PriceListModelsPriceList>}
     */
    listPriceLists(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [PriceListModelsPriceList];
      return this.apiClient.callApi(
        '/API/PriceList/List', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePricelistPrices operation.
     * @callback module:api/PriceListApi~updatePricelistPricesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PriceListModelsPriceListPriceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates price list prices
     * - Prices on campaign price lists (id: xxxxxx2) can not be updated. Any such entries will be ignored.  - ID for Ordinary, Sale and Campaign price lists starts from 1000000.   The ID is calculated by this formula, Market ID * 1000000 + Type of price list (Ordinary=0, Sale=1, Capaign=2)  So :  Ordinary price list for market with ID 1 has ID = 1000000  Sale price list for market with ID 1 has ID = 1000001  Campaign price list for market with ID 1 has ID = 1000002  Ordinary price list for market with ID 2 has ID = 2000000  And so on ...
     * @param {Array.<module:model/PriceListModelsWritePriceListPrice>} priceListPrices List of new price list prices.
     * @param {Object} opts Optional parameters
     * @param {module:model/Number} opts.productIdType The type of product id supplied in {priceListPrices}
     * @param {Boolean} opts.pricesIncVat Set to true if prices in {priceListPrices} includes VAT. Leave blank or set to false if they exclude VAT.
     * @param {module:api/PriceListApi~updatePricelistPricesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PriceListModelsPriceListPriceResponse}
     */
    updatePricelistPrices(priceListPrices, opts, callback) {
      opts = opts || {};
      let postBody = priceListPrices;
      // verify the required parameter 'priceListPrices' is set
      if (priceListPrices === undefined || priceListPrices === null) {
        throw new Error("Missing the required parameter 'priceListPrices' when calling updatePricelistPrices");
      }

      let pathParams = {
      };
      let queryParams = {
        'productIdType': opts['productIdType'],
        'pricesIncVat': opts['pricesIncVat']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey', 'basicAuth'];
      let contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = PriceListModelsPriceListPriceResponse;
      return this.apiClient.callApi(
        '/API/PriceList/Price', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
