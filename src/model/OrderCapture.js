/**
 * Geins Management API
 *  Geins Management API is a RESTful api that powers your applications and helps you manage your Geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip Tip With this API, you can build custom applications and integrate with third-party systems, feeds, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API User`. You can create as many API users as you need. Each `API user` is connected to a specific account so you can keep track of operations and manage keys.   You can find all your API credentials in `Geins Merchant Center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are required:   - `Basic Auth`   - `API Key`    All API credentials can be found in `Geins Merchant Center`.  #### Basic Auth A Basic auth `Authorization` header needs to be included in every request. The value should be `Basic <credentials>` where `<credentials>` is the Base64 encoding of your `API username` and `API password` joined by a single colon `:`.   See [Wikipedia](https://en.wikipedia.org/wiki/Basic_access_authentication) for more information on Basic auth.  #### API Key  An `X-ApiKey` header needs to be included in every request. This header should contain the value of your `API key`.  #### Example ```bash curl -X GET \"https://mgmtapi.geins.io/API/Market/List\" \\ -H \"Authorization: Basic [USER-CREDENTIALS-BASE64-ENCODED]\" \\ -H \"X-ApiKey: [API-KEY]\" ``` 
 *
 * The version of the OpenAPI document: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderCaptureRow from './OrderCaptureRow';

/**
 * The OrderCapture model module.
 * @module model/OrderCapture
 * @version v1.10.1
 */
class OrderCapture {
    /**
     * Constructs a new <code>OrderCapture</code>.
     * @alias module:model/OrderCapture
     */
    constructor() { 
        
        OrderCapture.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderCapture</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderCapture} obj Optional instance to populate.
     * @return {module:model/OrderCapture} The populated <code>OrderCapture</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderCapture();

            if (data.hasOwnProperty('CaptureId')) {
                obj['CaptureId'] = ApiClient.convertToType(data['CaptureId'], 'String');
            }
            if (data.hasOwnProperty('OrderPaymentId')) {
                obj['OrderPaymentId'] = ApiClient.convertToType(data['OrderPaymentId'], 'String');
            }
            if (data.hasOwnProperty('OrderId')) {
                obj['OrderId'] = ApiClient.convertToType(data['OrderId'], 'Number');
            }
            if (data.hasOwnProperty('ExternalOrderId')) {
                obj['ExternalOrderId'] = ApiClient.convertToType(data['ExternalOrderId'], 'String');
            }
            if (data.hasOwnProperty('ExternalId')) {
                obj['ExternalId'] = ApiClient.convertToType(data['ExternalId'], 'String');
            }
            if (data.hasOwnProperty('Reference')) {
                obj['Reference'] = ApiClient.convertToType(data['Reference'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('ProcessedOn')) {
                obj['ProcessedOn'] = ApiClient.convertToType(data['ProcessedOn'], 'Date');
            }
            if (data.hasOwnProperty('CapturedItemTotal')) {
                obj['CapturedItemTotal'] = ApiClient.convertToType(data['CapturedItemTotal'], 'Number');
            }
            if (data.hasOwnProperty('CapturedShippingFee')) {
                obj['CapturedShippingFee'] = ApiClient.convertToType(data['CapturedShippingFee'], 'Number');
            }
            if (data.hasOwnProperty('CapturedPaymentFee')) {
                obj['CapturedPaymentFee'] = ApiClient.convertToType(data['CapturedPaymentFee'], 'Number');
            }
            if (data.hasOwnProperty('CapturedDiscount')) {
                obj['CapturedDiscount'] = ApiClient.convertToType(data['CapturedDiscount'], 'Number');
            }
            if (data.hasOwnProperty('CapturedBalance')) {
                obj['CapturedBalance'] = ApiClient.convertToType(data['CapturedBalance'], 'Number');
            }
            if (data.hasOwnProperty('VatRate')) {
                obj['VatRate'] = ApiClient.convertToType(data['VatRate'], 'Number');
            }
            if (data.hasOwnProperty('TrackingNumber')) {
                obj['TrackingNumber'] = ApiClient.convertToType(data['TrackingNumber'], 'String');
            }
            if (data.hasOwnProperty('ShippingName')) {
                obj['ShippingName'] = ApiClient.convertToType(data['ShippingName'], 'String');
            }
            if (data.hasOwnProperty('TrackingUri')) {
                obj['TrackingUri'] = ApiClient.convertToType(data['TrackingUri'], 'String');
            }
            if (data.hasOwnProperty('ShippingMethod')) {
                obj['ShippingMethod'] = ApiClient.convertToType(data['ShippingMethod'], 'String');
            }
            if (data.hasOwnProperty('PaymentName')) {
                obj['PaymentName'] = ApiClient.convertToType(data['PaymentName'], 'String');
            }
            if (data.hasOwnProperty('Locale')) {
                obj['Locale'] = ApiClient.convertToType(data['Locale'], 'String');
            }
            if (data.hasOwnProperty('Rows')) {
                obj['Rows'] = ApiClient.convertToType(data['Rows'], [OrderCaptureRow]);
            }
            if (data.hasOwnProperty('OrderTransactionId')) {
                obj['OrderTransactionId'] = ApiClient.convertToType(data['OrderTransactionId'], 'String');
            }
            if (data.hasOwnProperty('SecondaryOrderTransactionId')) {
                obj['SecondaryOrderTransactionId'] = ApiClient.convertToType(data['SecondaryOrderTransactionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderCapture</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderCapture</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['CaptureId'] && !(typeof data['CaptureId'] === 'string' || data['CaptureId'] instanceof String)) {
            throw new Error("Expected the field `CaptureId` to be a primitive type in the JSON string but got " + data['CaptureId']);
        }
        // ensure the json data is a string
        if (data['OrderPaymentId'] && !(typeof data['OrderPaymentId'] === 'string' || data['OrderPaymentId'] instanceof String)) {
            throw new Error("Expected the field `OrderPaymentId` to be a primitive type in the JSON string but got " + data['OrderPaymentId']);
        }
        // ensure the json data is a string
        if (data['ExternalOrderId'] && !(typeof data['ExternalOrderId'] === 'string' || data['ExternalOrderId'] instanceof String)) {
            throw new Error("Expected the field `ExternalOrderId` to be a primitive type in the JSON string but got " + data['ExternalOrderId']);
        }
        // ensure the json data is a string
        if (data['ExternalId'] && !(typeof data['ExternalId'] === 'string' || data['ExternalId'] instanceof String)) {
            throw new Error("Expected the field `ExternalId` to be a primitive type in the JSON string but got " + data['ExternalId']);
        }
        // ensure the json data is a string
        if (data['Reference'] && !(typeof data['Reference'] === 'string' || data['Reference'] instanceof String)) {
            throw new Error("Expected the field `Reference` to be a primitive type in the JSON string but got " + data['Reference']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['TrackingNumber'] && !(typeof data['TrackingNumber'] === 'string' || data['TrackingNumber'] instanceof String)) {
            throw new Error("Expected the field `TrackingNumber` to be a primitive type in the JSON string but got " + data['TrackingNumber']);
        }
        // ensure the json data is a string
        if (data['ShippingName'] && !(typeof data['ShippingName'] === 'string' || data['ShippingName'] instanceof String)) {
            throw new Error("Expected the field `ShippingName` to be a primitive type in the JSON string but got " + data['ShippingName']);
        }
        // ensure the json data is a string
        if (data['TrackingUri'] && !(typeof data['TrackingUri'] === 'string' || data['TrackingUri'] instanceof String)) {
            throw new Error("Expected the field `TrackingUri` to be a primitive type in the JSON string but got " + data['TrackingUri']);
        }
        // ensure the json data is a string
        if (data['ShippingMethod'] && !(typeof data['ShippingMethod'] === 'string' || data['ShippingMethod'] instanceof String)) {
            throw new Error("Expected the field `ShippingMethod` to be a primitive type in the JSON string but got " + data['ShippingMethod']);
        }
        // ensure the json data is a string
        if (data['PaymentName'] && !(typeof data['PaymentName'] === 'string' || data['PaymentName'] instanceof String)) {
            throw new Error("Expected the field `PaymentName` to be a primitive type in the JSON string but got " + data['PaymentName']);
        }
        // ensure the json data is a string
        if (data['Locale'] && !(typeof data['Locale'] === 'string' || data['Locale'] instanceof String)) {
            throw new Error("Expected the field `Locale` to be a primitive type in the JSON string but got " + data['Locale']);
        }
        if (data['Rows']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Rows'])) {
                throw new Error("Expected the field `Rows` to be an array in the JSON data but got " + data['Rows']);
            }
            // validate the optional field `Rows` (array)
            for (const item of data['Rows']) {
                OrderCaptureRow.validateJsonObject(item);
            };
        }
        // ensure the json data is a string
        if (data['OrderTransactionId'] && !(typeof data['OrderTransactionId'] === 'string' || data['OrderTransactionId'] instanceof String)) {
            throw new Error("Expected the field `OrderTransactionId` to be a primitive type in the JSON string but got " + data['OrderTransactionId']);
        }
        // ensure the json data is a string
        if (data['SecondaryOrderTransactionId'] && !(typeof data['SecondaryOrderTransactionId'] === 'string' || data['SecondaryOrderTransactionId'] instanceof String)) {
            throw new Error("Expected the field `SecondaryOrderTransactionId` to be a primitive type in the JSON string but got " + data['SecondaryOrderTransactionId']);
        }

        return true;
    }


}



/**
 * @member {String} CaptureId
 */
OrderCapture.prototype['CaptureId'] = undefined;

/**
 * @member {String} OrderPaymentId
 */
OrderCapture.prototype['OrderPaymentId'] = undefined;

/**
 * @member {Number} OrderId
 */
OrderCapture.prototype['OrderId'] = undefined;

/**
 * @member {String} ExternalOrderId
 */
OrderCapture.prototype['ExternalOrderId'] = undefined;

/**
 * @member {String} ExternalId
 */
OrderCapture.prototype['ExternalId'] = undefined;

/**
 * @member {String} Reference
 */
OrderCapture.prototype['Reference'] = undefined;

/**
 * @member {String} Description
 */
OrderCapture.prototype['Description'] = undefined;

/**
 * @member {Date} ProcessedOn
 */
OrderCapture.prototype['ProcessedOn'] = undefined;

/**
 * @member {Number} CapturedItemTotal
 */
OrderCapture.prototype['CapturedItemTotal'] = undefined;

/**
 * @member {Number} CapturedShippingFee
 */
OrderCapture.prototype['CapturedShippingFee'] = undefined;

/**
 * @member {Number} CapturedPaymentFee
 */
OrderCapture.prototype['CapturedPaymentFee'] = undefined;

/**
 * @member {Number} CapturedDiscount
 */
OrderCapture.prototype['CapturedDiscount'] = undefined;

/**
 * @member {Number} CapturedBalance
 */
OrderCapture.prototype['CapturedBalance'] = undefined;

/**
 * @member {Number} VatRate
 */
OrderCapture.prototype['VatRate'] = undefined;

/**
 * @member {String} TrackingNumber
 */
OrderCapture.prototype['TrackingNumber'] = undefined;

/**
 * @member {String} ShippingName
 */
OrderCapture.prototype['ShippingName'] = undefined;

/**
 * @member {String} TrackingUri
 */
OrderCapture.prototype['TrackingUri'] = undefined;

/**
 * @member {String} ShippingMethod
 */
OrderCapture.prototype['ShippingMethod'] = undefined;

/**
 * @member {String} PaymentName
 */
OrderCapture.prototype['PaymentName'] = undefined;

/**
 * @member {String} Locale
 */
OrderCapture.prototype['Locale'] = undefined;

/**
 * @member {Array.<module:model/OrderCaptureRow>} Rows
 */
OrderCapture.prototype['Rows'] = undefined;

/**
 * @member {String} OrderTransactionId
 */
OrderCapture.prototype['OrderTransactionId'] = undefined;

/**
 * @member {String} SecondaryOrderTransactionId
 */
OrderCapture.prototype['SecondaryOrderTransactionId'] = undefined;






export default OrderCapture;

