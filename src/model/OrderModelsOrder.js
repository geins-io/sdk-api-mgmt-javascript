/**
 * Geins Management API
 *  Geins Management API is a RESTful api that powers your applications and helps you manage your Geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip Tip With this API, you can build custom applications and integrate with third-party systems, feeds, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API User`. You can create as many API users as you need. Each `API user` is connected to a specific account so you can keep track of operations and manage keys.   You can find all your API credentials in `Geins Merchant Center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are required:   - `Basic Auth`   - `API Key`    All API credentials can be found in `Geins Merchant Center`.  #### Basic Auth A Basic auth `Authorization` header needs to be included in every request. The value should be `Basic <credentials>` where `<credentials>` is the Base64 encoding of your `API username` and `API password` joined by a single colon `:`.   See [Wikipedia](https://en.wikipedia.org/wiki/Basic_access_authentication) for more information on Basic auth.  #### API Key  An `X-ApiKey` header needs to be included in every request. This header should contain the value of your `API key`.  #### Example ```bash curl -X GET \"https://mgmtapi.geins.io/API/Market/List\" \\ -H \"Authorization: Basic [USER-CREDENTIALS-BASE64-ENCODED]\" \\ -H \"X-ApiKey: [API-KEY]\" ``` 
 *
 * The version of the OpenAPI document: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderModelsAddress from './OrderModelsAddress';
import OrderModelsOrderRefund from './OrderModelsOrderRefund';
import OrderModelsOrderRow from './OrderModelsOrderRow';
import OrderModelsPaymentDetail from './OrderModelsPaymentDetail';
import OrderModelsShippingDetail from './OrderModelsShippingDetail';

/**
 * The OrderModelsOrder model module.
 * @module model/OrderModelsOrder
 * @version v1.10.1
 */
class OrderModelsOrder {
    /**
     * Constructs a new <code>OrderModelsOrder</code>.
     * An order.
     * @alias module:model/OrderModelsOrder
     */
    constructor() { 
        
        OrderModelsOrder.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderModelsOrder</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderModelsOrder} obj Optional instance to populate.
     * @return {module:model/OrderModelsOrder} The populated <code>OrderModelsOrder</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderModelsOrder();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'Number');
            }
            if (data.hasOwnProperty('ExternalId')) {
                obj['ExternalId'] = ApiClient.convertToType(data['ExternalId'], 'String');
            }
            if (data.hasOwnProperty('PersonalId')) {
                obj['PersonalId'] = ApiClient.convertToType(data['PersonalId'], 'String');
            }
            if (data.hasOwnProperty('CustomerId')) {
                obj['CustomerId'] = ApiClient.convertToType(data['CustomerId'], 'Number');
            }
            if (data.hasOwnProperty('CustomerTypeId')) {
                obj['CustomerTypeId'] = ApiClient.convertToType(data['CustomerTypeId'], 'Number');
            }
            if (data.hasOwnProperty('CustomerGroupId')) {
                obj['CustomerGroupId'] = ApiClient.convertToType(data['CustomerGroupId'], 'Number');
            }
            if (data.hasOwnProperty('CustomerGroupName')) {
                obj['CustomerGroupName'] = ApiClient.convertToType(data['CustomerGroupName'], 'String');
            }
            if (data.hasOwnProperty('CreatedAt')) {
                obj['CreatedAt'] = ApiClient.convertToType(data['CreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('UpdatedAt')) {
                obj['UpdatedAt'] = ApiClient.convertToType(data['UpdatedAt'], 'Date');
            }
            if (data.hasOwnProperty('CompletedAt')) {
                obj['CompletedAt'] = ApiClient.convertToType(data['CompletedAt'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('Currency')) {
                obj['Currency'] = ApiClient.convertToType(data['Currency'], 'String');
            }
            if (data.hasOwnProperty('CurrencyRate')) {
                obj['CurrencyRate'] = ApiClient.convertToType(data['CurrencyRate'], 'Number');
            }
            if (data.hasOwnProperty('MarketId')) {
                obj['MarketId'] = ApiClient.convertToType(data['MarketId'], 'Number');
            }
            if (data.hasOwnProperty('MarketName')) {
                obj['MarketName'] = ApiClient.convertToType(data['MarketName'], 'String');
            }
            if (data.hasOwnProperty('Language')) {
                obj['Language'] = ApiClient.convertToType(data['Language'], 'String');
            }
            if (data.hasOwnProperty('OrderTotal')) {
                obj['OrderTotal'] = ApiClient.convertToType(data['OrderTotal'], 'Number');
            }
            if (data.hasOwnProperty('ExpectedSum')) {
                obj['ExpectedSum'] = ApiClient.convertToType(data['ExpectedSum'], 'Number');
            }
            if (data.hasOwnProperty('VATTotal')) {
                obj['VATTotal'] = ApiClient.convertToType(data['VATTotal'], 'Number');
            }
            if (data.hasOwnProperty('OrderValueIncVat')) {
                obj['OrderValueIncVat'] = ApiClient.convertToType(data['OrderValueIncVat'], 'Number');
            }
            if (data.hasOwnProperty('OrderValueExVat')) {
                obj['OrderValueExVat'] = ApiClient.convertToType(data['OrderValueExVat'], 'Number');
            }
            if (data.hasOwnProperty('ItemValueIncVat')) {
                obj['ItemValueIncVat'] = ApiClient.convertToType(data['ItemValueIncVat'], 'Number');
            }
            if (data.hasOwnProperty('ItemValueExVat')) {
                obj['ItemValueExVat'] = ApiClient.convertToType(data['ItemValueExVat'], 'Number');
            }
            if (data.hasOwnProperty('Discount')) {
                obj['Discount'] = ApiClient.convertToType(data['Discount'], 'Number');
            }
            if (data.hasOwnProperty('DiscountExVat')) {
                obj['DiscountExVat'] = ApiClient.convertToType(data['DiscountExVat'], 'Number');
            }
            if (data.hasOwnProperty('FromBalance')) {
                obj['FromBalance'] = ApiClient.convertToType(data['FromBalance'], 'Number');
            }
            if (data.hasOwnProperty('ShippingFee')) {
                obj['ShippingFee'] = ApiClient.convertToType(data['ShippingFee'], 'Number');
            }
            if (data.hasOwnProperty('ShippingFeeExVat')) {
                obj['ShippingFeeExVat'] = ApiClient.convertToType(data['ShippingFeeExVat'], 'Number');
            }
            if (data.hasOwnProperty('PaymentFee')) {
                obj['PaymentFee'] = ApiClient.convertToType(data['PaymentFee'], 'Number');
            }
            if (data.hasOwnProperty('PaymentFeeExVat')) {
                obj['PaymentFeeExVat'] = ApiClient.convertToType(data['PaymentFeeExVat'], 'Number');
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
            if (data.hasOwnProperty('OrderMessages')) {
                obj['OrderMessages'] = ApiClient.convertToType(data['OrderMessages'], ['String']);
            }
            if (data.hasOwnProperty('PaymentDetails')) {
                obj['PaymentDetails'] = ApiClient.convertToType(data['PaymentDetails'], [OrderModelsPaymentDetail]);
            }
            if (data.hasOwnProperty('ShippingDetails')) {
                obj['ShippingDetails'] = ApiClient.convertToType(data['ShippingDetails'], [OrderModelsShippingDetail]);
            }
            if (data.hasOwnProperty('ShippingAddress')) {
                obj['ShippingAddress'] = OrderModelsAddress.constructFromObject(data['ShippingAddress']);
            }
            if (data.hasOwnProperty('BillingAddress')) {
                obj['BillingAddress'] = OrderModelsAddress.constructFromObject(data['BillingAddress']);
            }
            if (data.hasOwnProperty('Rows')) {
                obj['Rows'] = ApiClient.convertToType(data['Rows'], [OrderModelsOrderRow]);
            }
            if (data.hasOwnProperty('Refunds')) {
                obj['Refunds'] = ApiClient.convertToType(data['Refunds'], [OrderModelsOrderRefund]);
            }
            if (data.hasOwnProperty('Ip')) {
                obj['Ip'] = ApiClient.convertToType(data['Ip'], 'String');
            }
            if (data.hasOwnProperty('UserAgent')) {
                obj['UserAgent'] = ApiClient.convertToType(data['UserAgent'], 'String');
            }
            if (data.hasOwnProperty('ServiceLocation')) {
                obj['ServiceLocation'] = ApiClient.convertToType(data['ServiceLocation'], 'String');
            }
            if (data.hasOwnProperty('CampaignCode')) {
                obj['CampaignCode'] = ApiClient.convertToType(data['CampaignCode'], 'String');
            }
            if (data.hasOwnProperty('CampaignCodeId')) {
                obj['CampaignCodeId'] = ApiClient.convertToType(data['CampaignCodeId'], 'Number');
            }
            if (data.hasOwnProperty('Percent')) {
                obj['Percent'] = ApiClient.convertToType(data['Percent'], 'Number');
            }
            if (data.hasOwnProperty('DesiredDeliveryDate')) {
                obj['DesiredDeliveryDate'] = ApiClient.convertToType(data['DesiredDeliveryDate'], 'Date');
            }
            if (data.hasOwnProperty('Gender')) {
                obj['Gender'] = ApiClient.convertToType(data['Gender'], 'Boolean');
            }
            if (data.hasOwnProperty('CartId')) {
                obj['CartId'] = ApiClient.convertToType(data['CartId'], 'Number');
            }
            if (data.hasOwnProperty('SessionId')) {
                obj['SessionId'] = ApiClient.convertToType(data['SessionId'], 'String');
            }
            if (data.hasOwnProperty('ExternalOrderStatus')) {
                obj['ExternalOrderStatus'] = ApiClient.convertToType(data['ExternalOrderStatus'], 'Number');
            }
            if (data.hasOwnProperty('CampaignIds')) {
                obj['CampaignIds'] = ApiClient.convertToType(data['CampaignIds'], ['String']);
            }
            if (data.hasOwnProperty('CampaignNames')) {
                obj['CampaignNames'] = ApiClient.convertToType(data['CampaignNames'], ['String']);
            }
            if (data.hasOwnProperty('MetaData')) {
                obj['MetaData'] = ApiClient.convertToType(data['MetaData'], {'String': 'String'});
            }
            if (data.hasOwnProperty('PublicId')) {
                obj['PublicId'] = ApiClient.convertToType(data['PublicId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderModelsOrder</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderModelsOrder</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ExternalId'] && !(typeof data['ExternalId'] === 'string' || data['ExternalId'] instanceof String)) {
            throw new Error("Expected the field `ExternalId` to be a primitive type in the JSON string but got " + data['ExternalId']);
        }
        // ensure the json data is a string
        if (data['PersonalId'] && !(typeof data['PersonalId'] === 'string' || data['PersonalId'] instanceof String)) {
            throw new Error("Expected the field `PersonalId` to be a primitive type in the JSON string but got " + data['PersonalId']);
        }
        // ensure the json data is a string
        if (data['CustomerGroupName'] && !(typeof data['CustomerGroupName'] === 'string' || data['CustomerGroupName'] instanceof String)) {
            throw new Error("Expected the field `CustomerGroupName` to be a primitive type in the JSON string but got " + data['CustomerGroupName']);
        }
        // ensure the json data is a string
        if (data['Status'] && !(typeof data['Status'] === 'string' || data['Status'] instanceof String)) {
            throw new Error("Expected the field `Status` to be a primitive type in the JSON string but got " + data['Status']);
        }
        // ensure the json data is a string
        if (data['Currency'] && !(typeof data['Currency'] === 'string' || data['Currency'] instanceof String)) {
            throw new Error("Expected the field `Currency` to be a primitive type in the JSON string but got " + data['Currency']);
        }
        // ensure the json data is a string
        if (data['MarketName'] && !(typeof data['MarketName'] === 'string' || data['MarketName'] instanceof String)) {
            throw new Error("Expected the field `MarketName` to be a primitive type in the JSON string but got " + data['MarketName']);
        }
        // ensure the json data is a string
        if (data['Language'] && !(typeof data['Language'] === 'string' || data['Language'] instanceof String)) {
            throw new Error("Expected the field `Language` to be a primitive type in the JSON string but got " + data['Language']);
        }
        // ensure the json data is a string
        if (data['Message'] && !(typeof data['Message'] === 'string' || data['Message'] instanceof String)) {
            throw new Error("Expected the field `Message` to be a primitive type in the JSON string but got " + data['Message']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['OrderMessages'])) {
            throw new Error("Expected the field `OrderMessages` to be an array in the JSON data but got " + data['OrderMessages']);
        }
        if (data['PaymentDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['PaymentDetails'])) {
                throw new Error("Expected the field `PaymentDetails` to be an array in the JSON data but got " + data['PaymentDetails']);
            }
            // validate the optional field `PaymentDetails` (array)
            for (const item of data['PaymentDetails']) {
                OrderModelsPaymentDetail.validateJsonObject(item);
            };
        }
        if (data['ShippingDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ShippingDetails'])) {
                throw new Error("Expected the field `ShippingDetails` to be an array in the JSON data but got " + data['ShippingDetails']);
            }
            // validate the optional field `ShippingDetails` (array)
            for (const item of data['ShippingDetails']) {
                OrderModelsShippingDetail.validateJsonObject(item);
            };
        }
        // validate the optional field `ShippingAddress`
        if (data['ShippingAddress']) { // data not null
          OrderModelsAddress.validateJSON(data['ShippingAddress']);
        }
        // validate the optional field `BillingAddress`
        if (data['BillingAddress']) { // data not null
          OrderModelsAddress.validateJSON(data['BillingAddress']);
        }
        if (data['Rows']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Rows'])) {
                throw new Error("Expected the field `Rows` to be an array in the JSON data but got " + data['Rows']);
            }
            // validate the optional field `Rows` (array)
            for (const item of data['Rows']) {
                OrderModelsOrderRow.validateJsonObject(item);
            };
        }
        if (data['Refunds']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Refunds'])) {
                throw new Error("Expected the field `Refunds` to be an array in the JSON data but got " + data['Refunds']);
            }
            // validate the optional field `Refunds` (array)
            for (const item of data['Refunds']) {
                OrderModelsOrderRefund.validateJsonObject(item);
            };
        }
        // ensure the json data is a string
        if (data['Ip'] && !(typeof data['Ip'] === 'string' || data['Ip'] instanceof String)) {
            throw new Error("Expected the field `Ip` to be a primitive type in the JSON string but got " + data['Ip']);
        }
        // ensure the json data is a string
        if (data['UserAgent'] && !(typeof data['UserAgent'] === 'string' || data['UserAgent'] instanceof String)) {
            throw new Error("Expected the field `UserAgent` to be a primitive type in the JSON string but got " + data['UserAgent']);
        }
        // ensure the json data is a string
        if (data['ServiceLocation'] && !(typeof data['ServiceLocation'] === 'string' || data['ServiceLocation'] instanceof String)) {
            throw new Error("Expected the field `ServiceLocation` to be a primitive type in the JSON string but got " + data['ServiceLocation']);
        }
        // ensure the json data is a string
        if (data['CampaignCode'] && !(typeof data['CampaignCode'] === 'string' || data['CampaignCode'] instanceof String)) {
            throw new Error("Expected the field `CampaignCode` to be a primitive type in the JSON string but got " + data['CampaignCode']);
        }
        // ensure the json data is a string
        if (data['SessionId'] && !(typeof data['SessionId'] === 'string' || data['SessionId'] instanceof String)) {
            throw new Error("Expected the field `SessionId` to be a primitive type in the JSON string but got " + data['SessionId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['CampaignIds'])) {
            throw new Error("Expected the field `CampaignIds` to be an array in the JSON data but got " + data['CampaignIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['CampaignNames'])) {
            throw new Error("Expected the field `CampaignNames` to be an array in the JSON data but got " + data['CampaignNames']);
        }
        // ensure the json data is a string
        if (data['PublicId'] && !(typeof data['PublicId'] === 'string' || data['PublicId'] instanceof String)) {
            throw new Error("Expected the field `PublicId` to be a primitive type in the JSON string but got " + data['PublicId']);
        }

        return true;
    }


}



/**
 * The id of the order.
 * @member {Number} Id
 */
OrderModelsOrder.prototype['Id'] = undefined;

/**
 * The external id of the order.
 * @member {String} ExternalId
 */
OrderModelsOrder.prototype['ExternalId'] = undefined;

/**
 * The personal id or organisation number of the customer.
 * @member {String} PersonalId
 */
OrderModelsOrder.prototype['PersonalId'] = undefined;

/**
 * The id of the customer that placed the order.
 * @member {Number} CustomerId
 */
OrderModelsOrder.prototype['CustomerId'] = undefined;

/**
 * Customer type. Usually 1 for private customers and 2 for companies.
 * @member {Number} CustomerTypeId
 */
OrderModelsOrder.prototype['CustomerTypeId'] = undefined;

/**
 * The id of the customer group that the customer belongs to, if any.
 * @member {Number} CustomerGroupId
 */
OrderModelsOrder.prototype['CustomerGroupId'] = undefined;

/**
 * The name of the customer group that the customer belongs to, if any.
 * @member {String} CustomerGroupName
 */
OrderModelsOrder.prototype['CustomerGroupName'] = undefined;

/**
 * Date and time when the order was created.
 * @member {Date} CreatedAt
 */
OrderModelsOrder.prototype['CreatedAt'] = undefined;

/**
 * Date and time when the order was last updated.
 * @member {Date} UpdatedAt
 */
OrderModelsOrder.prototype['UpdatedAt'] = undefined;

/**
 * The date nd time when the order was completed (eg delivered and paid).
 * @member {Date} CompletedAt
 */
OrderModelsOrder.prototype['CompletedAt'] = undefined;

/**
 * The order status.    Possbile values:    cancelled    on-hold    inactive    refunded    partial    pending-payment    backorder    completed    pending
 * @member {String} Status
 */
OrderModelsOrder.prototype['Status'] = undefined;

/**
 * ISO currency code.
 * @member {String} Currency
 */
OrderModelsOrder.prototype['Currency'] = undefined;

/**
 * The currency rate to SEK.
 * @member {Number} CurrencyRate
 */
OrderModelsOrder.prototype['CurrencyRate'] = undefined;

/**
 * The id of the market that this order originates from.
 * @member {Number} MarketId
 */
OrderModelsOrder.prototype['MarketId'] = undefined;

/**
 * The market name. This is usually equal to the site or channel name.
 * @member {String} MarketName
 */
OrderModelsOrder.prototype['MarketName'] = undefined;

/**
 * Two-letter language code.
 * @member {String} Language
 */
OrderModelsOrder.prototype['Language'] = undefined;

/**
 * Order total.
 * @member {Number} OrderTotal
 */
OrderModelsOrder.prototype['OrderTotal'] = undefined;

/**
 * Expected total sum to be paid after discount and balance.    The value is usually taken directly from the payment provider and represents the actual reserved amount.   If this differs from OrderTotal, actions should be taken to ensure they match. This usually happens due to rounding.
 * @member {Number} ExpectedSum
 */
OrderModelsOrder.prototype['ExpectedSum'] = undefined;

/**
 * Order VAT total.
 * @member {Number} VATTotal
 */
OrderModelsOrder.prototype['VATTotal'] = undefined;

/**
 * Order value inc vat after discount but before balance.
 * @member {Number} OrderValueIncVat
 */
OrderModelsOrder.prototype['OrderValueIncVat'] = undefined;

/**
 * Order value ex vat after discount but before balance.
 * @member {Number} OrderValueExVat
 */
OrderModelsOrder.prototype['OrderValueExVat'] = undefined;

/**
 * Item value inc vat excluding fees and discount.
 * @member {Number} ItemValueIncVat
 */
OrderModelsOrder.prototype['ItemValueIncVat'] = undefined;

/**
 * Item value ex vat excluding fees and discount.
 * @member {Number} ItemValueExVat
 */
OrderModelsOrder.prototype['ItemValueExVat'] = undefined;

/**
 * Total discount inc vat.
 * @member {Number} Discount
 */
OrderModelsOrder.prototype['Discount'] = undefined;

/**
 * Total discount ex vat.
 * @member {Number} DiscountExVat
 */
OrderModelsOrder.prototype['DiscountExVat'] = undefined;

/**
 * The amount which was withdrawn from the customers balance inc vat.
 * @member {Number} FromBalance
 */
OrderModelsOrder.prototype['FromBalance'] = undefined;

/**
 * Shipping fee inc vat.
 * @member {Number} ShippingFee
 */
OrderModelsOrder.prototype['ShippingFee'] = undefined;

/**
 * Shipping fee ex vat.
 * @member {Number} ShippingFeeExVat
 */
OrderModelsOrder.prototype['ShippingFeeExVat'] = undefined;

/**
 * Payment fee inc vat.
 * @member {Number} PaymentFee
 */
OrderModelsOrder.prototype['PaymentFee'] = undefined;

/**
 * Payment fee ex vat.
 * @member {Number} PaymentFeeExVat
 */
OrderModelsOrder.prototype['PaymentFeeExVat'] = undefined;

/**
 * Order message. Can contain instructions from customer or added details about the order.
 * @member {String} Message
 */
OrderModelsOrder.prototype['Message'] = undefined;

/**
 * Internal order messages. Can contain internal details about the order.
 * @member {Array.<String>} OrderMessages
 */
OrderModelsOrder.prototype['OrderMessages'] = undefined;

/**
 * List of payment details.
 * @member {Array.<module:model/OrderModelsPaymentDetail>} PaymentDetails
 */
OrderModelsOrder.prototype['PaymentDetails'] = undefined;

/**
 * List of shipping details.
 * @member {Array.<module:model/OrderModelsShippingDetail>} ShippingDetails
 */
OrderModelsOrder.prototype['ShippingDetails'] = undefined;

/**
 * @member {module:model/OrderModelsAddress} ShippingAddress
 */
OrderModelsOrder.prototype['ShippingAddress'] = undefined;

/**
 * @member {module:model/OrderModelsAddress} BillingAddress
 */
OrderModelsOrder.prototype['BillingAddress'] = undefined;

/**
 * List of order rows.
 * @member {Array.<module:model/OrderModelsOrderRow>} Rows
 */
OrderModelsOrder.prototype['Rows'] = undefined;

/**
 * List of order refunds.
 * @member {Array.<module:model/OrderModelsOrderRefund>} Refunds
 */
OrderModelsOrder.prototype['Refunds'] = undefined;

/**
 * Customer IP-number.
 * @member {String} Ip
 */
OrderModelsOrder.prototype['Ip'] = undefined;

/**
 * Customer User Agent.
 * @member {String} UserAgent
 */
OrderModelsOrder.prototype['UserAgent'] = undefined;

/**
 * Chosen service location.
 * @member {String} ServiceLocation
 */
OrderModelsOrder.prototype['ServiceLocation'] = undefined;

/**
 * Campaign code applied to the order.
 * @member {String} CampaignCode
 */
OrderModelsOrder.prototype['CampaignCode'] = undefined;

/**
 * The internal id of the applied campaign code.
 * @member {Number} CampaignCodeId
 */
OrderModelsOrder.prototype['CampaignCodeId'] = undefined;

/**
 * General percent discount applied to the order.
 * @member {Number} Percent
 */
OrderModelsOrder.prototype['Percent'] = undefined;

/**
 * The desired delivery date of the order.
 * @member {Date} DesiredDeliveryDate
 */
OrderModelsOrder.prototype['DesiredDeliveryDate'] = undefined;

/**
 * The gender of the customer.    True = male, False = female, null = unknown.
 * @member {Boolean} Gender
 */
OrderModelsOrder.prototype['Gender'] = undefined;

/**
 * The id of the cart from which this order originates.
 * @member {Number} CartId
 */
OrderModelsOrder.prototype['CartId'] = undefined;

/**
 * The session id for the from which this order originates.
 * @member {String} SessionId
 */
OrderModelsOrder.prototype['SessionId'] = undefined;

/**
 *     0 = None    10 = New    20 = Processing    30 = Failed    40 = Done
 * @member {module:model/OrderModelsOrder.ExternalOrderStatusEnum} ExternalOrderStatus
 */
OrderModelsOrder.prototype['ExternalOrderStatus'] = undefined;

/**
 * The ids for the campaigns applied to this order (not rows).
 * @member {Array.<String>} CampaignIds
 */
OrderModelsOrder.prototype['CampaignIds'] = undefined;

/**
 * The names of the campaigns applied to this order (not rows).
 * @member {Array.<String>} CampaignNames
 */
OrderModelsOrder.prototype['CampaignNames'] = undefined;

/**
 * The order meta data to store additional information about the order.
 * @member {Object.<String, String>} MetaData
 */
OrderModelsOrder.prototype['MetaData'] = undefined;

/**
 * The public id of this order.
 * @member {String} PublicId
 */
OrderModelsOrder.prototype['PublicId'] = undefined;





/**
 * Allowed values for the <code>ExternalOrderStatus</code> property.
 * @enum {Number}
 * @readonly
 */
OrderModelsOrder['ExternalOrderStatusEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 10
     * @const
     */
    "10": 10,

    /**
     * value: 20
     * @const
     */
    "20": 20,

    /**
     * value: 30
     * @const
     */
    "30": 30,

    /**
     * value: 40
     * @const
     */
    "40": 40
};



export default OrderModelsOrder;

