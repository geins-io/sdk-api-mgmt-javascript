/**
 * Geins Management API
 *  Geins Management API is a RESTful api that powers your applications and helps you manage your Geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip Tip With this API, you can build custom applications and integrate with third-party systems, feeds, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API User`. You can create as many API users as you need. Each `API user` is connected to a specific account so you can keep track of operations and manage keys.   You can find all your API credentials in `Geins Merchant Center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are required:   - `Basic Auth`   - `API Key`    All API credentials can be found in `Geins Merchant Center`.  #### Basic Auth A Basic auth `Authorization` header needs to be included in every request. The value should be `Basic <credentials>` where `<credentials>` is the Base64 encoding of your `API username` and `API password` joined by a single colon `:`.   See [Wikipedia](https://en.wikipedia.org/wiki/Basic_access_authentication) for more information on Basic auth.  #### API Key  An `X-ApiKey` header needs to be included in every request. This header should contain the value of your `API key`.  #### Example ```bash curl -X GET \"https://mgmtapi.geins.io/API/Market/List\" \\ -H \"Authorization: Basic [USER-CREDENTIALS-BASE64-ENCODED]\" \\ -H \"X-ApiKey: [API-KEY]\" ``` 
 *
 * The version of the OpenAPI document: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrderModelsOrderRow model module.
 * @module model/OrderModelsOrderRow
 * @version v1.10.1
 */
class OrderModelsOrderRow {
    /**
     * Constructs a new <code>OrderModelsOrderRow</code>.
     * An order row.
     * @alias module:model/OrderModelsOrderRow
     */
    constructor() { 
        
        OrderModelsOrderRow.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderModelsOrderRow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderModelsOrderRow} obj Optional instance to populate.
     * @return {module:model/OrderModelsOrderRow} The populated <code>OrderModelsOrderRow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderModelsOrderRow();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'Number');
            }
            if (data.hasOwnProperty('ProductId')) {
                obj['ProductId'] = ApiClient.convertToType(data['ProductId'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('ProductName')) {
                obj['ProductName'] = ApiClient.convertToType(data['ProductName'], 'String');
            }
            if (data.hasOwnProperty('ItemId')) {
                obj['ItemId'] = ApiClient.convertToType(data['ItemId'], 'Number');
            }
            if (data.hasOwnProperty('ItemName')) {
                obj['ItemName'] = ApiClient.convertToType(data['ItemName'], 'String');
            }
            if (data.hasOwnProperty('ArticleNumber')) {
                obj['ArticleNumber'] = ApiClient.convertToType(data['ArticleNumber'], 'String');
            }
            if (data.hasOwnProperty('Total')) {
                obj['Total'] = ApiClient.convertToType(data['Total'], 'Number');
            }
            if (data.hasOwnProperty('ExpectedTotalPriceIncVat')) {
                obj['ExpectedTotalPriceIncVat'] = ApiClient.convertToType(data['ExpectedTotalPriceIncVat'], 'Number');
            }
            if (data.hasOwnProperty('DiscountRate')) {
                obj['DiscountRate'] = ApiClient.convertToType(data['DiscountRate'], 'Number');
            }
            if (data.hasOwnProperty('Discount')) {
                obj['Discount'] = ApiClient.convertToType(data['Discount'], 'Number');
            }
            if (data.hasOwnProperty('ExpectedTotalDiscountIncVat')) {
                obj['ExpectedTotalDiscountIncVat'] = ApiClient.convertToType(data['ExpectedTotalDiscountIncVat'], 'Number');
            }
            if (data.hasOwnProperty('VATTotal')) {
                obj['VATTotal'] = ApiClient.convertToType(data['VATTotal'], 'Number');
            }
            if (data.hasOwnProperty('VATRate')) {
                obj['VATRate'] = ApiClient.convertToType(data['VATRate'], 'Number');
            }
            if (data.hasOwnProperty('Quantity')) {
                obj['Quantity'] = ApiClient.convertToType(data['Quantity'], 'Number');
            }
            if (data.hasOwnProperty('PurchasePrice')) {
                obj['PurchasePrice'] = ApiClient.convertToType(data['PurchasePrice'], 'Number');
            }
            if (data.hasOwnProperty('PaymentDetailId')) {
                obj['PaymentDetailId'] = ApiClient.convertToType(data['PaymentDetailId'], 'Number');
            }
            if (data.hasOwnProperty('ShippingDetailId')) {
                obj['ShippingDetailId'] = ApiClient.convertToType(data['ShippingDetailId'], 'Number');
            }
            if (data.hasOwnProperty('Market')) {
                obj['Market'] = ApiClient.convertToType(data['Market'], 'String');
            }
            if (data.hasOwnProperty('UnitPrice')) {
                obj['UnitPrice'] = ApiClient.convertToType(data['UnitPrice'], 'Number');
            }
            if (data.hasOwnProperty('ProductContainerBuildId')) {
                obj['ProductContainerBuildId'] = ApiClient.convertToType(data['ProductContainerBuildId'], 'Number');
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
            if (data.hasOwnProperty('CartRowId')) {
                obj['CartRowId'] = ApiClient.convertToType(data['CartRowId'], 'Number');
            }
            if (data.hasOwnProperty('ExternalId')) {
                obj['ExternalId'] = ApiClient.convertToType(data['ExternalId'], 'String');
            }
            if (data.hasOwnProperty('ProductContainerSelectionId')) {
                obj['ProductContainerSelectionId'] = ApiClient.convertToType(data['ProductContainerSelectionId'], 'Number');
            }
            if (data.hasOwnProperty('ProductContainerName')) {
                obj['ProductContainerName'] = ApiClient.convertToType(data['ProductContainerName'], 'String');
            }
            if (data.hasOwnProperty('ExternalProductId')) {
                obj['ExternalProductId'] = ApiClient.convertToType(data['ExternalProductId'], 'String');
            }
            if (data.hasOwnProperty('ExternalProductItemId')) {
                obj['ExternalProductItemId'] = ApiClient.convertToType(data['ExternalProductItemId'], 'String');
            }
            if (data.hasOwnProperty('ParcelGroupId')) {
                obj['ParcelGroupId'] = ApiClient.convertToType(data['ParcelGroupId'], 'Number');
            }
            if (data.hasOwnProperty('BrandName')) {
                obj['BrandName'] = ApiClient.convertToType(data['BrandName'], 'String');
            }
            if (data.hasOwnProperty('Gtin')) {
                obj['Gtin'] = ApiClient.convertToType(data['Gtin'], 'String');
            }
            if (data.hasOwnProperty('Weight')) {
                obj['Weight'] = ApiClient.convertToType(data['Weight'], 'Number');
            }
            if (data.hasOwnProperty('Length')) {
                obj['Length'] = ApiClient.convertToType(data['Length'], 'Number');
            }
            if (data.hasOwnProperty('Width')) {
                obj['Width'] = ApiClient.convertToType(data['Width'], 'Number');
            }
            if (data.hasOwnProperty('Height')) {
                obj['Height'] = ApiClient.convertToType(data['Height'], 'Number');
            }
            if (data.hasOwnProperty('Color')) {
                obj['Color'] = ApiClient.convertToType(data['Color'], 'String');
            }
            if (data.hasOwnProperty('Variant')) {
                obj['Variant'] = ApiClient.convertToType(data['Variant'], 'String');
            }
            if (data.hasOwnProperty('CampaignIds')) {
                obj['CampaignIds'] = ApiClient.convertToType(data['CampaignIds'], ['String']);
            }
            if (data.hasOwnProperty('CampaignGroupData')) {
                obj['CampaignGroupData'] = ApiClient.convertToType(data['CampaignGroupData'], 'String');
            }
            if (data.hasOwnProperty('CampaignGroupId')) {
                obj['CampaignGroupId'] = ApiClient.convertToType(data['CampaignGroupId'], 'Number');
            }
            if (data.hasOwnProperty('CampaignNames')) {
                obj['CampaignNames'] = ApiClient.convertToType(data['CampaignNames'], ['String']);
            }
            if (data.hasOwnProperty('CategoryId')) {
                obj['CategoryId'] = ApiClient.convertToType(data['CategoryId'], 'Number');
            }
            if (data.hasOwnProperty('RelatedProductsBuildId')) {
                obj['RelatedProductsBuildId'] = ApiClient.convertToType(data['RelatedProductsBuildId'], 'String');
            }
            if (data.hasOwnProperty('PackingLocationId')) {
                obj['PackingLocationId'] = ApiClient.convertToType(data['PackingLocationId'], 'Number');
            }
            if (data.hasOwnProperty('ProductPriceCampaignId')) {
                obj['ProductPriceCampaignId'] = ApiClient.convertToType(data['ProductPriceCampaignId'], 'Number');
            }
            if (data.hasOwnProperty('ProductPriceListId')) {
                obj['ProductPriceListId'] = ApiClient.convertToType(data['ProductPriceListId'], 'Number');
            }
            if (data.hasOwnProperty('ProductPackageId')) {
                obj['ProductPackageId'] = ApiClient.convertToType(data['ProductPackageId'], 'Number');
            }
            if (data.hasOwnProperty('ProductPackageName')) {
                obj['ProductPackageName'] = ApiClient.convertToType(data['ProductPackageName'], 'String');
            }
            if (data.hasOwnProperty('ProductPackageGroupId')) {
                obj['ProductPackageGroupId'] = ApiClient.convertToType(data['ProductPackageGroupId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderModelsOrderRow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderModelsOrderRow</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['ProductName'] && !(typeof data['ProductName'] === 'string' || data['ProductName'] instanceof String)) {
            throw new Error("Expected the field `ProductName` to be a primitive type in the JSON string but got " + data['ProductName']);
        }
        // ensure the json data is a string
        if (data['ItemName'] && !(typeof data['ItemName'] === 'string' || data['ItemName'] instanceof String)) {
            throw new Error("Expected the field `ItemName` to be a primitive type in the JSON string but got " + data['ItemName']);
        }
        // ensure the json data is a string
        if (data['ArticleNumber'] && !(typeof data['ArticleNumber'] === 'string' || data['ArticleNumber'] instanceof String)) {
            throw new Error("Expected the field `ArticleNumber` to be a primitive type in the JSON string but got " + data['ArticleNumber']);
        }
        // ensure the json data is a string
        if (data['Market'] && !(typeof data['Market'] === 'string' || data['Market'] instanceof String)) {
            throw new Error("Expected the field `Market` to be a primitive type in the JSON string but got " + data['Market']);
        }
        // ensure the json data is a string
        if (data['Message'] && !(typeof data['Message'] === 'string' || data['Message'] instanceof String)) {
            throw new Error("Expected the field `Message` to be a primitive type in the JSON string but got " + data['Message']);
        }
        // ensure the json data is a string
        if (data['ExternalId'] && !(typeof data['ExternalId'] === 'string' || data['ExternalId'] instanceof String)) {
            throw new Error("Expected the field `ExternalId` to be a primitive type in the JSON string but got " + data['ExternalId']);
        }
        // ensure the json data is a string
        if (data['ProductContainerName'] && !(typeof data['ProductContainerName'] === 'string' || data['ProductContainerName'] instanceof String)) {
            throw new Error("Expected the field `ProductContainerName` to be a primitive type in the JSON string but got " + data['ProductContainerName']);
        }
        // ensure the json data is a string
        if (data['ExternalProductId'] && !(typeof data['ExternalProductId'] === 'string' || data['ExternalProductId'] instanceof String)) {
            throw new Error("Expected the field `ExternalProductId` to be a primitive type in the JSON string but got " + data['ExternalProductId']);
        }
        // ensure the json data is a string
        if (data['ExternalProductItemId'] && !(typeof data['ExternalProductItemId'] === 'string' || data['ExternalProductItemId'] instanceof String)) {
            throw new Error("Expected the field `ExternalProductItemId` to be a primitive type in the JSON string but got " + data['ExternalProductItemId']);
        }
        // ensure the json data is a string
        if (data['BrandName'] && !(typeof data['BrandName'] === 'string' || data['BrandName'] instanceof String)) {
            throw new Error("Expected the field `BrandName` to be a primitive type in the JSON string but got " + data['BrandName']);
        }
        // ensure the json data is a string
        if (data['Gtin'] && !(typeof data['Gtin'] === 'string' || data['Gtin'] instanceof String)) {
            throw new Error("Expected the field `Gtin` to be a primitive type in the JSON string but got " + data['Gtin']);
        }
        // ensure the json data is a string
        if (data['Color'] && !(typeof data['Color'] === 'string' || data['Color'] instanceof String)) {
            throw new Error("Expected the field `Color` to be a primitive type in the JSON string but got " + data['Color']);
        }
        // ensure the json data is a string
        if (data['Variant'] && !(typeof data['Variant'] === 'string' || data['Variant'] instanceof String)) {
            throw new Error("Expected the field `Variant` to be a primitive type in the JSON string but got " + data['Variant']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['CampaignIds'])) {
            throw new Error("Expected the field `CampaignIds` to be an array in the JSON data but got " + data['CampaignIds']);
        }
        // ensure the json data is a string
        if (data['CampaignGroupData'] && !(typeof data['CampaignGroupData'] === 'string' || data['CampaignGroupData'] instanceof String)) {
            throw new Error("Expected the field `CampaignGroupData` to be a primitive type in the JSON string but got " + data['CampaignGroupData']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['CampaignNames'])) {
            throw new Error("Expected the field `CampaignNames` to be an array in the JSON data but got " + data['CampaignNames']);
        }
        // ensure the json data is a string
        if (data['RelatedProductsBuildId'] && !(typeof data['RelatedProductsBuildId'] === 'string' || data['RelatedProductsBuildId'] instanceof String)) {
            throw new Error("Expected the field `RelatedProductsBuildId` to be a primitive type in the JSON string but got " + data['RelatedProductsBuildId']);
        }
        // ensure the json data is a string
        if (data['ProductPackageName'] && !(typeof data['ProductPackageName'] === 'string' || data['ProductPackageName'] instanceof String)) {
            throw new Error("Expected the field `ProductPackageName` to be a primitive type in the JSON string but got " + data['ProductPackageName']);
        }
        // ensure the json data is a string
        if (data['ProductPackageGroupId'] && !(typeof data['ProductPackageGroupId'] === 'string' || data['ProductPackageGroupId'] instanceof String)) {
            throw new Error("Expected the field `ProductPackageGroupId` to be a primitive type in the JSON string but got " + data['ProductPackageGroupId']);
        }

        return true;
    }


}



/**
 * The id of this order row.
 * @member {Number} Id
 */
OrderModelsOrderRow.prototype['Id'] = undefined;

/**
 * Product id.
 * @member {Number} ProductId
 */
OrderModelsOrderRow.prototype['ProductId'] = undefined;

/**
 * Order row name.
 * @member {String} Name
 */
OrderModelsOrderRow.prototype['Name'] = undefined;

/**
 * Product name.
 * @member {String} ProductName
 */
OrderModelsOrderRow.prototype['ProductName'] = undefined;

/**
 * Item id (SKU).
 * @member {Number} ItemId
 */
OrderModelsOrderRow.prototype['ItemId'] = undefined;

/**
 * Item name.
 * @member {String} ItemName
 */
OrderModelsOrderRow.prototype['ItemName'] = undefined;

/**
 * Article number.
 * @member {String} ArticleNumber
 */
OrderModelsOrderRow.prototype['ArticleNumber'] = undefined;

/**
 * Order row total (affected by quantity).
 * @member {Number} Total
 */
OrderModelsOrderRow.prototype['Total'] = undefined;

/**
 * Expected total price inc vat, inc row discount.    The value is usually taken directly from the payment provider and represents the actual paid amount.
 * @member {Number} ExpectedTotalPriceIncVat
 */
OrderModelsOrderRow.prototype['ExpectedTotalPriceIncVat'] = undefined;

/**
 * Order row discount rate.  E.g. 10% = 10.0
 * @member {Number} DiscountRate
 */
OrderModelsOrderRow.prototype['DiscountRate'] = undefined;

/**
 * Order row discount sum inc VAT.
 * @member {Number} Discount
 */
OrderModelsOrderRow.prototype['Discount'] = undefined;

/**
 * Expected total discount inc vat.    The value is usually taken directly from the payment provider and represents the actual applied discount amount.
 * @member {Number} ExpectedTotalDiscountIncVat
 */
OrderModelsOrderRow.prototype['ExpectedTotalDiscountIncVat'] = undefined;

/**
 * Order row total VAT (affected by quantity).
 * @member {Number} VATTotal
 */
OrderModelsOrderRow.prototype['VATTotal'] = undefined;

/**
 * VAT rate.  E.g. 25% = 0.25.
 * @member {Number} VATRate
 */
OrderModelsOrderRow.prototype['VATRate'] = undefined;

/**
 * Quantity.
 * @member {Number} Quantity
 */
OrderModelsOrderRow.prototype['Quantity'] = undefined;

/**
 * Purchase price of the product.
 * @member {Number} PurchasePrice
 */
OrderModelsOrderRow.prototype['PurchasePrice'] = undefined;

/**
 * A reference to the payment detail that this row belongs to.
 * @member {Number} PaymentDetailId
 */
OrderModelsOrderRow.prototype['PaymentDetailId'] = undefined;

/**
 * A reference to the shipping detail that this row belongs to.
 * @member {Number} ShippingDetailId
 */
OrderModelsOrderRow.prototype['ShippingDetailId'] = undefined;

/**
 * The market that the order row belongs to.
 * @member {String} Market
 */
OrderModelsOrderRow.prototype['Market'] = undefined;

/**
 * Order row unit price inc vat, inc row discount.
 * @member {Number} UnitPrice
 */
OrderModelsOrderRow.prototype['UnitPrice'] = undefined;

/**
 * A reference to the product container build the row belongs to.
 * @member {Number} ProductContainerBuildId
 */
OrderModelsOrderRow.prototype['ProductContainerBuildId'] = undefined;

/**
 * A system message for this row.
 * @member {String} Message
 */
OrderModelsOrderRow.prototype['Message'] = undefined;

/**
 * The unique identifier for the cart row from which this order row originates.
 * @member {Number} CartRowId
 */
OrderModelsOrderRow.prototype['CartRowId'] = undefined;

/**
 * The identifier for the external row from which this order row originates.
 * @member {String} ExternalId
 */
OrderModelsOrderRow.prototype['ExternalId'] = undefined;

/**
 * The identifier for a Product container selection id that is part of the product configurator module
 * @member {Number} ProductContainerSelectionId
 */
OrderModelsOrderRow.prototype['ProductContainerSelectionId'] = undefined;

/**
 * The name of the product container.
 * @member {String} ProductContainerName
 */
OrderModelsOrderRow.prototype['ProductContainerName'] = undefined;

/**
 * External Id of the product.
 * @member {String} ExternalProductId
 */
OrderModelsOrderRow.prototype['ExternalProductId'] = undefined;

/**
 * External Id of the product item.
 * @member {String} ExternalProductItemId
 */
OrderModelsOrderRow.prototype['ExternalProductItemId'] = undefined;

/**
 * Parcel group id for a shipped order row.
 * @member {Number} ParcelGroupId
 */
OrderModelsOrderRow.prototype['ParcelGroupId'] = undefined;

/**
 * Brand name of the product.
 * @member {String} BrandName
 */
OrderModelsOrderRow.prototype['BrandName'] = undefined;

/**
 * The GTIN number for the product item.  Also known as <a href=\"http://www.gtin.info/\">EAN, UCC or UPS number</a>.
 * @member {String} Gtin
 */
OrderModelsOrderRow.prototype['Gtin'] = undefined;

/**
 * The weight of the product item in grams (g).
 * @member {Number} Weight
 */
OrderModelsOrderRow.prototype['Weight'] = undefined;

/**
 * The length of the product item in millimeters (mm).
 * @member {Number} Length
 */
OrderModelsOrderRow.prototype['Length'] = undefined;

/**
 * The width of the product item in millimeters (mm).
 * @member {Number} Width
 */
OrderModelsOrderRow.prototype['Width'] = undefined;

/**
 * The height of the product item in millimeters (mm).
 * @member {Number} Height
 */
OrderModelsOrderRow.prototype['Height'] = undefined;

/**
 * Product color.  E.g. Black.
 * @member {String} Color
 */
OrderModelsOrderRow.prototype['Color'] = undefined;

/**
 * Product variant.  E.g. Black XL.
 * @member {String} Variant
 */
OrderModelsOrderRow.prototype['Variant'] = undefined;

/**
 * The ids for the campaigns applied to this row.
 * @member {Array.<String>} CampaignIds
 */
OrderModelsOrderRow.prototype['CampaignIds'] = undefined;

/**
 * Contains json data describing the different campaign groups belonging to this row.    Fields:    i -&gt; Campaign Number (int), n -&gt; Number of items belonging to this group.
 * @member {String} CampaignGroupData
 */
OrderModelsOrderRow.prototype['CampaignGroupData'] = undefined;

/**
 * Contains the the ID of the campaign group this row belongs to.
 * @member {Number} CampaignGroupId
 */
OrderModelsOrderRow.prototype['CampaignGroupId'] = undefined;

/**
 * The names for the campaigns applied to this row.
 * @member {Array.<String>} CampaignNames
 */
OrderModelsOrderRow.prototype['CampaignNames'] = undefined;

/**
 * The product category for the product on this order row.
 * @member {Number} CategoryId
 */
OrderModelsOrderRow.prototype['CategoryId'] = undefined;

/**
 * GUID that connects orderrows that are part of a build.
 * @member {String} RelatedProductsBuildId
 */
OrderModelsOrderRow.prototype['RelatedProductsBuildId'] = undefined;

/**
 * The packing location of this order row.
 * @member {Number} PackingLocationId
 */
OrderModelsOrderRow.prototype['PackingLocationId'] = undefined;

/**
 * The id of the applied product price campaign.
 * @member {Number} ProductPriceCampaignId
 */
OrderModelsOrderRow.prototype['ProductPriceCampaignId'] = undefined;

/**
 * The id of the applied product price list.
 * @member {Number} ProductPriceListId
 */
OrderModelsOrderRow.prototype['ProductPriceListId'] = undefined;

/**
 * Id of the product package used for this row.
 * @member {Number} ProductPackageId
 */
OrderModelsOrderRow.prototype['ProductPackageId'] = undefined;

/**
 * Name of the product package used for this row.
 * @member {String} ProductPackageName
 */
OrderModelsOrderRow.prototype['ProductPackageName'] = undefined;

/**
 * The unique group id for the product package used for this row.    This separates purchases of multiple packages with the same id.
 * @member {String} ProductPackageGroupId
 */
OrderModelsOrderRow.prototype['ProductPackageGroupId'] = undefined;






export default OrderModelsOrderRow;

