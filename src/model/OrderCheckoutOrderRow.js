/**
 * geins-management-api-sdk-js
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrderCheckoutOrderRow model module.
 * @module model/OrderCheckoutOrderRow
 * @version v1.7.1
 */
class OrderCheckoutOrderRow {
    /**
     * Constructs a new <code>OrderCheckoutOrderRow</code>.
     * @alias module:model/OrderCheckoutOrderRow
     */
    constructor() { 
        
        OrderCheckoutOrderRow.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderCheckoutOrderRow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderCheckoutOrderRow} obj Optional instance to populate.
     * @return {module:model/OrderCheckoutOrderRow} The populated <code>OrderCheckoutOrderRow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderCheckoutOrderRow();

            if (data.hasOwnProperty('Sku')) {
                obj['Sku'] = ApiClient.convertToType(data['Sku'], 'String');
            }
            if (data.hasOwnProperty('ProductId')) {
                obj['ProductId'] = ApiClient.convertToType(data['ProductId'], 'Number');
            }
            if (data.hasOwnProperty('ExternalId')) {
                obj['ExternalId'] = ApiClient.convertToType(data['ExternalId'], 'String');
            }
            if (data.hasOwnProperty('DiscountRate')) {
                obj['DiscountRate'] = ApiClient.convertToType(data['DiscountRate'], 'Number');
            }
            if (data.hasOwnProperty('CartRowId')) {
                obj['CartRowId'] = ApiClient.convertToType(data['CartRowId'], 'Number');
            }
            if (data.hasOwnProperty('ProductContainerBuildId')) {
                obj['ProductContainerBuildId'] = ApiClient.convertToType(data['ProductContainerBuildId'], 'Number');
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
            if (data.hasOwnProperty('ArticleNumber')) {
                obj['ArticleNumber'] = ApiClient.convertToType(data['ArticleNumber'], 'String');
            }
            if (data.hasOwnProperty('Gtin')) {
                obj['Gtin'] = ApiClient.convertToType(data['Gtin'], 'String');
            }
            if (data.hasOwnProperty('Brand')) {
                obj['Brand'] = ApiClient.convertToType(data['Brand'], 'String');
            }
            if (data.hasOwnProperty('Categories')) {
                obj['Categories'] = ApiClient.convertToType(data['Categories'], ['String']);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Variant')) {
                obj['Variant'] = ApiClient.convertToType(data['Variant'], 'String');
            }
            if (data.hasOwnProperty('Quantity')) {
                obj['Quantity'] = ApiClient.convertToType(data['Quantity'], 'Number');
            }
            if (data.hasOwnProperty('PriceIncVat')) {
                obj['PriceIncVat'] = ApiClient.convertToType(data['PriceIncVat'], 'Number');
            }
            if (data.hasOwnProperty('PriceExVat')) {
                obj['PriceExVat'] = ApiClient.convertToType(data['PriceExVat'], 'Number');
            }
            if (data.hasOwnProperty('ExpectedTotalPriceIncVat')) {
                obj['ExpectedTotalPriceIncVat'] = ApiClient.convertToType(data['ExpectedTotalPriceIncVat'], 'Number');
            }
            if (data.hasOwnProperty('DiscountIncVat')) {
                obj['DiscountIncVat'] = ApiClient.convertToType(data['DiscountIncVat'], 'Number');
            }
            if (data.hasOwnProperty('DiscountExVat')) {
                obj['DiscountExVat'] = ApiClient.convertToType(data['DiscountExVat'], 'Number');
            }
            if (data.hasOwnProperty('ExpectedTotalDiscountIncVat')) {
                obj['ExpectedTotalDiscountIncVat'] = ApiClient.convertToType(data['ExpectedTotalDiscountIncVat'], 'Number');
            }
            if (data.hasOwnProperty('ProductUrl')) {
                obj['ProductUrl'] = ApiClient.convertToType(data['ProductUrl'], 'String');
            }
            if (data.hasOwnProperty('ImageUrl')) {
                obj['ImageUrl'] = ApiClient.convertToType(data['ImageUrl'], 'String');
            }
            if (data.hasOwnProperty('Weight')) {
                obj['Weight'] = ApiClient.convertToType(data['Weight'], 'Number');
            }
            if (data.hasOwnProperty('Height')) {
                obj['Height'] = ApiClient.convertToType(data['Height'], 'Number');
            }
            if (data.hasOwnProperty('Width')) {
                obj['Width'] = ApiClient.convertToType(data['Width'], 'Number');
            }
            if (data.hasOwnProperty('Length')) {
                obj['Length'] = ApiClient.convertToType(data['Length'], 'Number');
            }
            if (data.hasOwnProperty('CampaignIds')) {
                obj['CampaignIds'] = ApiClient.convertToType(data['CampaignIds'], ['String']);
            }
            if (data.hasOwnProperty('CampaignGroupData')) {
                obj['CampaignGroupData'] = ApiClient.convertToType(data['CampaignGroupData'], 'String');
            }
            if (data.hasOwnProperty('CampaignNames')) {
                obj['CampaignNames'] = ApiClient.convertToType(data['CampaignNames'], ['String']);
            }
            if (data.hasOwnProperty('ProductPriceCampaignId')) {
                obj['ProductPriceCampaignId'] = ApiClient.convertToType(data['ProductPriceCampaignId'], 'Number');
            }
            if (data.hasOwnProperty('ProductPriceListId')) {
                obj['ProductPriceListId'] = ApiClient.convertToType(data['ProductPriceListId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderCheckoutOrderRow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderCheckoutOrderRow</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Sku'] && !(typeof data['Sku'] === 'string' || data['Sku'] instanceof String)) {
            throw new Error("Expected the field `Sku` to be a primitive type in the JSON string but got " + data['Sku']);
        }
        // ensure the json data is a string
        if (data['ExternalId'] && !(typeof data['ExternalId'] === 'string' || data['ExternalId'] instanceof String)) {
            throw new Error("Expected the field `ExternalId` to be a primitive type in the JSON string but got " + data['ExternalId']);
        }
        // ensure the json data is a string
        if (data['Message'] && !(typeof data['Message'] === 'string' || data['Message'] instanceof String)) {
            throw new Error("Expected the field `Message` to be a primitive type in the JSON string but got " + data['Message']);
        }
        // ensure the json data is a string
        if (data['ArticleNumber'] && !(typeof data['ArticleNumber'] === 'string' || data['ArticleNumber'] instanceof String)) {
            throw new Error("Expected the field `ArticleNumber` to be a primitive type in the JSON string but got " + data['ArticleNumber']);
        }
        // ensure the json data is a string
        if (data['Gtin'] && !(typeof data['Gtin'] === 'string' || data['Gtin'] instanceof String)) {
            throw new Error("Expected the field `Gtin` to be a primitive type in the JSON string but got " + data['Gtin']);
        }
        // ensure the json data is a string
        if (data['Brand'] && !(typeof data['Brand'] === 'string' || data['Brand'] instanceof String)) {
            throw new Error("Expected the field `Brand` to be a primitive type in the JSON string but got " + data['Brand']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Categories'])) {
            throw new Error("Expected the field `Categories` to be an array in the JSON data but got " + data['Categories']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Variant'] && !(typeof data['Variant'] === 'string' || data['Variant'] instanceof String)) {
            throw new Error("Expected the field `Variant` to be a primitive type in the JSON string but got " + data['Variant']);
        }
        // ensure the json data is a string
        if (data['ProductUrl'] && !(typeof data['ProductUrl'] === 'string' || data['ProductUrl'] instanceof String)) {
            throw new Error("Expected the field `ProductUrl` to be a primitive type in the JSON string but got " + data['ProductUrl']);
        }
        // ensure the json data is a string
        if (data['ImageUrl'] && !(typeof data['ImageUrl'] === 'string' || data['ImageUrl'] instanceof String)) {
            throw new Error("Expected the field `ImageUrl` to be a primitive type in the JSON string but got " + data['ImageUrl']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['CampaignIds'])) {
            throw new Error("Expected the field `CampaignIds` to be an array in the JSON data but got " + data['CampaignIds']);
        }
        // ensure the json data is a string
        if (data['CampaignGroupData'] && !(typeof data['CampaignGroupData'] === 'string' || data['CampaignGroupData'] instanceof String)) {
            throw new Error("Expected the field `CampaignGroupData` to be a primitive type in the JSON string but got " + data['CampaignGroupData']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['CampaignNames'])) {
            throw new Error("Expected the field `CampaignNames` to be an array in the JSON data but got " + data['CampaignNames']);
        }

        return true;
    }


}



/**
 * @member {String} Sku
 */
OrderCheckoutOrderRow.prototype['Sku'] = undefined;

/**
 * @member {Number} ProductId
 */
OrderCheckoutOrderRow.prototype['ProductId'] = undefined;

/**
 * @member {String} ExternalId
 */
OrderCheckoutOrderRow.prototype['ExternalId'] = undefined;

/**
 * @member {Number} DiscountRate
 */
OrderCheckoutOrderRow.prototype['DiscountRate'] = undefined;

/**
 * @member {Number} CartRowId
 */
OrderCheckoutOrderRow.prototype['CartRowId'] = undefined;

/**
 * @member {Number} ProductContainerBuildId
 */
OrderCheckoutOrderRow.prototype['ProductContainerBuildId'] = undefined;

/**
 * @member {String} Message
 */
OrderCheckoutOrderRow.prototype['Message'] = undefined;

/**
 * @member {String} ArticleNumber
 */
OrderCheckoutOrderRow.prototype['ArticleNumber'] = undefined;

/**
 * @member {String} Gtin
 */
OrderCheckoutOrderRow.prototype['Gtin'] = undefined;

/**
 * @member {String} Brand
 */
OrderCheckoutOrderRow.prototype['Brand'] = undefined;

/**
 * @member {Array.<String>} Categories
 */
OrderCheckoutOrderRow.prototype['Categories'] = undefined;

/**
 * @member {String} Name
 */
OrderCheckoutOrderRow.prototype['Name'] = undefined;

/**
 * @member {String} Variant
 */
OrderCheckoutOrderRow.prototype['Variant'] = undefined;

/**
 * @member {Number} Quantity
 */
OrderCheckoutOrderRow.prototype['Quantity'] = undefined;

/**
 * @member {Number} PriceIncVat
 */
OrderCheckoutOrderRow.prototype['PriceIncVat'] = undefined;

/**
 * @member {Number} PriceExVat
 */
OrderCheckoutOrderRow.prototype['PriceExVat'] = undefined;

/**
 * @member {Number} ExpectedTotalPriceIncVat
 */
OrderCheckoutOrderRow.prototype['ExpectedTotalPriceIncVat'] = undefined;

/**
 * @member {Number} DiscountIncVat
 */
OrderCheckoutOrderRow.prototype['DiscountIncVat'] = undefined;

/**
 * @member {Number} DiscountExVat
 */
OrderCheckoutOrderRow.prototype['DiscountExVat'] = undefined;

/**
 * @member {Number} ExpectedTotalDiscountIncVat
 */
OrderCheckoutOrderRow.prototype['ExpectedTotalDiscountIncVat'] = undefined;

/**
 * @member {String} ProductUrl
 */
OrderCheckoutOrderRow.prototype['ProductUrl'] = undefined;

/**
 * @member {String} ImageUrl
 */
OrderCheckoutOrderRow.prototype['ImageUrl'] = undefined;

/**
 * @member {Number} Weight
 */
OrderCheckoutOrderRow.prototype['Weight'] = undefined;

/**
 * @member {Number} Height
 */
OrderCheckoutOrderRow.prototype['Height'] = undefined;

/**
 * @member {Number} Width
 */
OrderCheckoutOrderRow.prototype['Width'] = undefined;

/**
 * @member {Number} Length
 */
OrderCheckoutOrderRow.prototype['Length'] = undefined;

/**
 * @member {Array.<String>} CampaignIds
 */
OrderCheckoutOrderRow.prototype['CampaignIds'] = undefined;

/**
 * @member {String} CampaignGroupData
 */
OrderCheckoutOrderRow.prototype['CampaignGroupData'] = undefined;

/**
 * @member {Array.<String>} CampaignNames
 */
OrderCheckoutOrderRow.prototype['CampaignNames'] = undefined;

/**
 * @member {Number} ProductPriceCampaignId
 */
OrderCheckoutOrderRow.prototype['ProductPriceCampaignId'] = undefined;

/**
 * @member {Number} ProductPriceListId
 */
OrderCheckoutOrderRow.prototype['ProductPriceListId'] = undefined;






export default OrderCheckoutOrderRow;

