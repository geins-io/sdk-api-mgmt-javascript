/**
 * Geins Management API
 *  Geins Management API is a RESTful api that powers your applications and helps you manage your Geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip Tip With this API, you can build custom applications and integrate with third-party systems, feeds, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API User`. You can create as many API users as you need. Each `API user` is connected to a specific account so you can keep track of operations and manage keys.   You can find all your API credentials in `Geins Merchant Center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are required:   - `Basic Auth`   - `API Key`    All API credentials can be found in `Geins Merchant Center`.  #### Basic Auth A Basic auth `Authorization` header needs to be included in every request. The value should be `Basic <credentials>` where `<credentials>` is the Base64 encoding of your `API username` and `API password` joined by a single colon `:`.   See [Wikipedia](https://en.wikipedia.org/wiki/Basic_access_authentication) for more information on Basic auth.  #### API Key  An `X-ApiKey` header needs to be included in every request. This header should contain the value of your `API key`.  #### Example ```bash curl -X GET \"https://mgmtapi.geins.io/API/Market/List\" \\ -H \"Authorization: Basic [USER-CREDENTIALS-BASE64-ENCODED]\" \\ -H \"X-ApiKey: [API-KEY]\" ``` 
 *
 * The version of the OpenAPI document: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderCheckoutOrderRow from './OrderCheckoutOrderRow';
import OrderFreightClass from './OrderFreightClass';

/**
 * The OrderCheckoutOrder model module.
 * @module model/OrderCheckoutOrder
 * @version v1.10.1
 */
class OrderCheckoutOrder {
    /**
     * Constructs a new <code>OrderCheckoutOrder</code>.
     * @alias module:model/OrderCheckoutOrder
     */
    constructor() { 
        
        OrderCheckoutOrder.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderCheckoutOrder</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderCheckoutOrder} obj Optional instance to populate.
     * @return {module:model/OrderCheckoutOrder} The populated <code>OrderCheckoutOrder</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderCheckoutOrder();

            if (data.hasOwnProperty('OrderId')) {
                obj['OrderId'] = ApiClient.convertToType(data['OrderId'], 'String');
            }
            if (data.hasOwnProperty('ExternalOrderId')) {
                obj['ExternalOrderId'] = ApiClient.convertToType(data['ExternalOrderId'], 'String');
            }
            if (data.hasOwnProperty('CartId')) {
                obj['CartId'] = ApiClient.convertToType(data['CartId'], 'String');
            }
            if (data.hasOwnProperty('SessionId')) {
                obj['SessionId'] = ApiClient.convertToType(data['SessionId'], 'String');
            }
            if (data.hasOwnProperty('SiteId')) {
                obj['SiteId'] = ApiClient.convertToType(data['SiteId'], 'Number');
            }
            if (data.hasOwnProperty('Currency')) {
                obj['Currency'] = ApiClient.convertToType(data['Currency'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('IpAddress')) {
                obj['IpAddress'] = ApiClient.convertToType(data['IpAddress'], 'String');
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
            if (data.hasOwnProperty('InternalMessage')) {
                obj['InternalMessage'] = ApiClient.convertToType(data['InternalMessage'], 'String');
            }
            if (data.hasOwnProperty('Locale')) {
                obj['Locale'] = ApiClient.convertToType(data['Locale'], 'String');
            }
            if (data.hasOwnProperty('Rows')) {
                obj['Rows'] = ApiClient.convertToType(data['Rows'], [OrderCheckoutOrderRow]);
            }
            if (data.hasOwnProperty('CampaignId')) {
                obj['CampaignId'] = ApiClient.convertToType(data['CampaignId'], 'Number');
            }
            if (data.hasOwnProperty('CampaignCode')) {
                obj['CampaignCode'] = ApiClient.convertToType(data['CampaignCode'], 'String');
            }
            if (data.hasOwnProperty('CampaignName')) {
                obj['CampaignName'] = ApiClient.convertToType(data['CampaignName'], 'String');
            }
            if (data.hasOwnProperty('CampaignIds')) {
                obj['CampaignIds'] = ApiClient.convertToType(data['CampaignIds'], ['String']);
            }
            if (data.hasOwnProperty('CampaignNames')) {
                obj['CampaignNames'] = ApiClient.convertToType(data['CampaignNames'], ['String']);
            }
            if (data.hasOwnProperty('CustomerId')) {
                obj['CustomerId'] = ApiClient.convertToType(data['CustomerId'], 'Number');
            }
            if (data.hasOwnProperty('CustomerTypeId')) {
                obj['CustomerTypeId'] = ApiClient.convertToType(data['CustomerTypeId'], 'Number');
            }
            if (data.hasOwnProperty('Gender')) {
                obj['Gender'] = ApiClient.convertToType(data['Gender'], 'Number');
            }
            if (data.hasOwnProperty('DateOfBirth')) {
                obj['DateOfBirth'] = ApiClient.convertToType(data['DateOfBirth'], 'Date');
            }
            if (data.hasOwnProperty('PersonalId')) {
                obj['PersonalId'] = ApiClient.convertToType(data['PersonalId'], 'String');
            }
            if (data.hasOwnProperty('UserAgent')) {
                obj['UserAgent'] = ApiClient.convertToType(data['UserAgent'], 'String');
            }
            if (data.hasOwnProperty('MetaData')) {
                obj['MetaData'] = ApiClient.convertToType(data['MetaData'], {'String': 'String'});
            }
            if (data.hasOwnProperty('MemberId')) {
                obj['MemberId'] = ApiClient.convertToType(data['MemberId'], 'Number');
            }
            if (data.hasOwnProperty('PaymentId')) {
                obj['PaymentId'] = ApiClient.convertToType(data['PaymentId'], 'Number');
            }
            if (data.hasOwnProperty('TransactionId')) {
                obj['TransactionId'] = ApiClient.convertToType(data['TransactionId'], 'String');
            }
            if (data.hasOwnProperty('SecondaryTransactionId')) {
                obj['SecondaryTransactionId'] = ApiClient.convertToType(data['SecondaryTransactionId'], 'String');
            }
            if (data.hasOwnProperty('Country')) {
                obj['Country'] = ApiClient.convertToType(data['Country'], 'String');
            }
            if (data.hasOwnProperty('Company')) {
                obj['Company'] = ApiClient.convertToType(data['Company'], 'String');
            }
            if (data.hasOwnProperty('OrganizationNumber')) {
                obj['OrganizationNumber'] = ApiClient.convertToType(data['OrganizationNumber'], 'String');
            }
            if (data.hasOwnProperty('FirstName')) {
                obj['FirstName'] = ApiClient.convertToType(data['FirstName'], 'String');
            }
            if (data.hasOwnProperty('LastName')) {
                obj['LastName'] = ApiClient.convertToType(data['LastName'], 'String');
            }
            if (data.hasOwnProperty('Email')) {
                obj['Email'] = ApiClient.convertToType(data['Email'], 'String');
            }
            if (data.hasOwnProperty('Address1')) {
                obj['Address1'] = ApiClient.convertToType(data['Address1'], 'String');
            }
            if (data.hasOwnProperty('Address2')) {
                obj['Address2'] = ApiClient.convertToType(data['Address2'], 'String');
            }
            if (data.hasOwnProperty('Zip')) {
                obj['Zip'] = ApiClient.convertToType(data['Zip'], 'String');
            }
            if (data.hasOwnProperty('City')) {
                obj['City'] = ApiClient.convertToType(data['City'], 'String');
            }
            if (data.hasOwnProperty('Region')) {
                obj['Region'] = ApiClient.convertToType(data['Region'], 'String');
            }
            if (data.hasOwnProperty('Phone')) {
                obj['Phone'] = ApiClient.convertToType(data['Phone'], 'String');
            }
            if (data.hasOwnProperty('MobilePhone')) {
                obj['MobilePhone'] = ApiClient.convertToType(data['MobilePhone'], 'String');
            }
            if (data.hasOwnProperty('CareOf')) {
                obj['CareOf'] = ApiClient.convertToType(data['CareOf'], 'String');
            }
            if (data.hasOwnProperty('ShippingId')) {
                obj['ShippingId'] = ApiClient.convertToType(data['ShippingId'], 'Number');
            }
            if (data.hasOwnProperty('ShippingCountry')) {
                obj['ShippingCountry'] = ApiClient.convertToType(data['ShippingCountry'], 'String');
            }
            if (data.hasOwnProperty('ShippingCompany')) {
                obj['ShippingCompany'] = ApiClient.convertToType(data['ShippingCompany'], 'String');
            }
            if (data.hasOwnProperty('ShippingOrganizationNumber')) {
                obj['ShippingOrganizationNumber'] = ApiClient.convertToType(data['ShippingOrganizationNumber'], 'String');
            }
            if (data.hasOwnProperty('ShippingFirstName')) {
                obj['ShippingFirstName'] = ApiClient.convertToType(data['ShippingFirstName'], 'String');
            }
            if (data.hasOwnProperty('ShippingLastName')) {
                obj['ShippingLastName'] = ApiClient.convertToType(data['ShippingLastName'], 'String');
            }
            if (data.hasOwnProperty('ShippingEmail')) {
                obj['ShippingEmail'] = ApiClient.convertToType(data['ShippingEmail'], 'String');
            }
            if (data.hasOwnProperty('ShippingAddress1')) {
                obj['ShippingAddress1'] = ApiClient.convertToType(data['ShippingAddress1'], 'String');
            }
            if (data.hasOwnProperty('ShippingAddress2')) {
                obj['ShippingAddress2'] = ApiClient.convertToType(data['ShippingAddress2'], 'String');
            }
            if (data.hasOwnProperty('ShippingZip')) {
                obj['ShippingZip'] = ApiClient.convertToType(data['ShippingZip'], 'String');
            }
            if (data.hasOwnProperty('ShippingCity')) {
                obj['ShippingCity'] = ApiClient.convertToType(data['ShippingCity'], 'String');
            }
            if (data.hasOwnProperty('ShippingRegion')) {
                obj['ShippingRegion'] = ApiClient.convertToType(data['ShippingRegion'], 'String');
            }
            if (data.hasOwnProperty('ShippingPhone')) {
                obj['ShippingPhone'] = ApiClient.convertToType(data['ShippingPhone'], 'String');
            }
            if (data.hasOwnProperty('ShippingMobilePhone')) {
                obj['ShippingMobilePhone'] = ApiClient.convertToType(data['ShippingMobilePhone'], 'String');
            }
            if (data.hasOwnProperty('ShippingCareOf')) {
                obj['ShippingCareOf'] = ApiClient.convertToType(data['ShippingCareOf'], 'String');
            }
            if (data.hasOwnProperty('PickupPoint')) {
                obj['PickupPoint'] = ApiClient.convertToType(data['PickupPoint'], 'String');
            }
            if (data.hasOwnProperty('DesiredDeliveryDate')) {
                obj['DesiredDeliveryDate'] = ApiClient.convertToType(data['DesiredDeliveryDate'], 'Date');
            }
            if (data.hasOwnProperty('FreightClass')) {
                obj['FreightClass'] = OrderFreightClass.constructFromObject(data['FreightClass']);
            }
            if (data.hasOwnProperty('FreeShippingLimit')) {
                obj['FreeShippingLimit'] = ApiClient.convertToType(data['FreeShippingLimit'], 'Number');
            }
            if (data.hasOwnProperty('FreeShippingFromLimit')) {
                obj['FreeShippingFromLimit'] = ApiClient.convertToType(data['FreeShippingFromLimit'], 'Boolean');
            }
            if (data.hasOwnProperty('FreeShippingFromCampaign')) {
                obj['FreeShippingFromCampaign'] = ApiClient.convertToType(data['FreeShippingFromCampaign'], 'Boolean');
            }
            if (data.hasOwnProperty('Sum')) {
                obj['Sum'] = ApiClient.convertToType(data['Sum'], 'Number');
            }
            if (data.hasOwnProperty('ExpectedSum')) {
                obj['ExpectedSum'] = ApiClient.convertToType(data['ExpectedSum'], 'Number');
            }
            if (data.hasOwnProperty('OrderValueIncVat')) {
                obj['OrderValueIncVat'] = ApiClient.convertToType(data['OrderValueIncVat'], 'Number');
            }
            if (data.hasOwnProperty('OrderValueExVat')) {
                obj['OrderValueExVat'] = ApiClient.convertToType(data['OrderValueExVat'], 'Number');
            }
            if (data.hasOwnProperty('ItemValueIncVat')) {
                obj['ItemValueIncVat'] = ApiClient.convertToType(data['ItemValueIncVat'], 'Number');
            }
            if (data.hasOwnProperty('ItemValueExVat')) {
                obj['ItemValueExVat'] = ApiClient.convertToType(data['ItemValueExVat'], 'Number');
            }
            if (data.hasOwnProperty('DiscountIncVat')) {
                obj['DiscountIncVat'] = ApiClient.convertToType(data['DiscountIncVat'], 'Number');
            }
            if (data.hasOwnProperty('DiscountExVat')) {
                obj['DiscountExVat'] = ApiClient.convertToType(data['DiscountExVat'], 'Number');
            }
            if (data.hasOwnProperty('PercentDiscount')) {
                obj['PercentDiscount'] = ApiClient.convertToType(data['PercentDiscount'], 'Number');
            }
            if (data.hasOwnProperty('Balance')) {
                obj['Balance'] = ApiClient.convertToType(data['Balance'], 'Number');
            }
            if (data.hasOwnProperty('ShippingFeeIncVat')) {
                obj['ShippingFeeIncVat'] = ApiClient.convertToType(data['ShippingFeeIncVat'], 'Number');
            }
            if (data.hasOwnProperty('ShippingFeeExVat')) {
                obj['ShippingFeeExVat'] = ApiClient.convertToType(data['ShippingFeeExVat'], 'Number');
            }
            if (data.hasOwnProperty('PaymentFeeIncVat')) {
                obj['PaymentFeeIncVat'] = ApiClient.convertToType(data['PaymentFeeIncVat'], 'Number');
            }
            if (data.hasOwnProperty('PaymentFeeExVat')) {
                obj['PaymentFeeExVat'] = ApiClient.convertToType(data['PaymentFeeExVat'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderCheckoutOrder</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderCheckoutOrder</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['OrderId'] && !(typeof data['OrderId'] === 'string' || data['OrderId'] instanceof String)) {
            throw new Error("Expected the field `OrderId` to be a primitive type in the JSON string but got " + data['OrderId']);
        }
        // ensure the json data is a string
        if (data['ExternalOrderId'] && !(typeof data['ExternalOrderId'] === 'string' || data['ExternalOrderId'] instanceof String)) {
            throw new Error("Expected the field `ExternalOrderId` to be a primitive type in the JSON string but got " + data['ExternalOrderId']);
        }
        // ensure the json data is a string
        if (data['CartId'] && !(typeof data['CartId'] === 'string' || data['CartId'] instanceof String)) {
            throw new Error("Expected the field `CartId` to be a primitive type in the JSON string but got " + data['CartId']);
        }
        // ensure the json data is a string
        if (data['SessionId'] && !(typeof data['SessionId'] === 'string' || data['SessionId'] instanceof String)) {
            throw new Error("Expected the field `SessionId` to be a primitive type in the JSON string but got " + data['SessionId']);
        }
        // ensure the json data is a string
        if (data['Currency'] && !(typeof data['Currency'] === 'string' || data['Currency'] instanceof String)) {
            throw new Error("Expected the field `Currency` to be a primitive type in the JSON string but got " + data['Currency']);
        }
        // ensure the json data is a string
        if (data['Status'] && !(typeof data['Status'] === 'string' || data['Status'] instanceof String)) {
            throw new Error("Expected the field `Status` to be a primitive type in the JSON string but got " + data['Status']);
        }
        // ensure the json data is a string
        if (data['IpAddress'] && !(typeof data['IpAddress'] === 'string' || data['IpAddress'] instanceof String)) {
            throw new Error("Expected the field `IpAddress` to be a primitive type in the JSON string but got " + data['IpAddress']);
        }
        // ensure the json data is a string
        if (data['Message'] && !(typeof data['Message'] === 'string' || data['Message'] instanceof String)) {
            throw new Error("Expected the field `Message` to be a primitive type in the JSON string but got " + data['Message']);
        }
        // ensure the json data is a string
        if (data['InternalMessage'] && !(typeof data['InternalMessage'] === 'string' || data['InternalMessage'] instanceof String)) {
            throw new Error("Expected the field `InternalMessage` to be a primitive type in the JSON string but got " + data['InternalMessage']);
        }
        // ensure the json data is a string
        if (data['Locale'] && !(typeof data['Locale'] === 'string' || data['Locale'] instanceof String)) {
            throw new Error("Expected the field `Locale` to be a primitive type in the JSON string but got " + data['Locale']);
        }
        if (data['Rows']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Rows'])) {
                throw new Error("Expected the field `Rows` to be an array in the JSON data but got " + data['Rows']);
            }
            // validate the optional field `Rows` (array)
            for (const item of data['Rows']) {
                OrderCheckoutOrderRow.validateJsonObject(item);
            };
        }
        // ensure the json data is a string
        if (data['CampaignCode'] && !(typeof data['CampaignCode'] === 'string' || data['CampaignCode'] instanceof String)) {
            throw new Error("Expected the field `CampaignCode` to be a primitive type in the JSON string but got " + data['CampaignCode']);
        }
        // ensure the json data is a string
        if (data['CampaignName'] && !(typeof data['CampaignName'] === 'string' || data['CampaignName'] instanceof String)) {
            throw new Error("Expected the field `CampaignName` to be a primitive type in the JSON string but got " + data['CampaignName']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['CampaignIds'])) {
            throw new Error("Expected the field `CampaignIds` to be an array in the JSON data but got " + data['CampaignIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['CampaignNames'])) {
            throw new Error("Expected the field `CampaignNames` to be an array in the JSON data but got " + data['CampaignNames']);
        }
        // ensure the json data is a string
        if (data['PersonalId'] && !(typeof data['PersonalId'] === 'string' || data['PersonalId'] instanceof String)) {
            throw new Error("Expected the field `PersonalId` to be a primitive type in the JSON string but got " + data['PersonalId']);
        }
        // ensure the json data is a string
        if (data['UserAgent'] && !(typeof data['UserAgent'] === 'string' || data['UserAgent'] instanceof String)) {
            throw new Error("Expected the field `UserAgent` to be a primitive type in the JSON string but got " + data['UserAgent']);
        }
        // ensure the json data is a string
        if (data['TransactionId'] && !(typeof data['TransactionId'] === 'string' || data['TransactionId'] instanceof String)) {
            throw new Error("Expected the field `TransactionId` to be a primitive type in the JSON string but got " + data['TransactionId']);
        }
        // ensure the json data is a string
        if (data['SecondaryTransactionId'] && !(typeof data['SecondaryTransactionId'] === 'string' || data['SecondaryTransactionId'] instanceof String)) {
            throw new Error("Expected the field `SecondaryTransactionId` to be a primitive type in the JSON string but got " + data['SecondaryTransactionId']);
        }
        // ensure the json data is a string
        if (data['Country'] && !(typeof data['Country'] === 'string' || data['Country'] instanceof String)) {
            throw new Error("Expected the field `Country` to be a primitive type in the JSON string but got " + data['Country']);
        }
        // ensure the json data is a string
        if (data['Company'] && !(typeof data['Company'] === 'string' || data['Company'] instanceof String)) {
            throw new Error("Expected the field `Company` to be a primitive type in the JSON string but got " + data['Company']);
        }
        // ensure the json data is a string
        if (data['OrganizationNumber'] && !(typeof data['OrganizationNumber'] === 'string' || data['OrganizationNumber'] instanceof String)) {
            throw new Error("Expected the field `OrganizationNumber` to be a primitive type in the JSON string but got " + data['OrganizationNumber']);
        }
        // ensure the json data is a string
        if (data['FirstName'] && !(typeof data['FirstName'] === 'string' || data['FirstName'] instanceof String)) {
            throw new Error("Expected the field `FirstName` to be a primitive type in the JSON string but got " + data['FirstName']);
        }
        // ensure the json data is a string
        if (data['LastName'] && !(typeof data['LastName'] === 'string' || data['LastName'] instanceof String)) {
            throw new Error("Expected the field `LastName` to be a primitive type in the JSON string but got " + data['LastName']);
        }
        // ensure the json data is a string
        if (data['Email'] && !(typeof data['Email'] === 'string' || data['Email'] instanceof String)) {
            throw new Error("Expected the field `Email` to be a primitive type in the JSON string but got " + data['Email']);
        }
        // ensure the json data is a string
        if (data['Address1'] && !(typeof data['Address1'] === 'string' || data['Address1'] instanceof String)) {
            throw new Error("Expected the field `Address1` to be a primitive type in the JSON string but got " + data['Address1']);
        }
        // ensure the json data is a string
        if (data['Address2'] && !(typeof data['Address2'] === 'string' || data['Address2'] instanceof String)) {
            throw new Error("Expected the field `Address2` to be a primitive type in the JSON string but got " + data['Address2']);
        }
        // ensure the json data is a string
        if (data['Zip'] && !(typeof data['Zip'] === 'string' || data['Zip'] instanceof String)) {
            throw new Error("Expected the field `Zip` to be a primitive type in the JSON string but got " + data['Zip']);
        }
        // ensure the json data is a string
        if (data['City'] && !(typeof data['City'] === 'string' || data['City'] instanceof String)) {
            throw new Error("Expected the field `City` to be a primitive type in the JSON string but got " + data['City']);
        }
        // ensure the json data is a string
        if (data['Region'] && !(typeof data['Region'] === 'string' || data['Region'] instanceof String)) {
            throw new Error("Expected the field `Region` to be a primitive type in the JSON string but got " + data['Region']);
        }
        // ensure the json data is a string
        if (data['Phone'] && !(typeof data['Phone'] === 'string' || data['Phone'] instanceof String)) {
            throw new Error("Expected the field `Phone` to be a primitive type in the JSON string but got " + data['Phone']);
        }
        // ensure the json data is a string
        if (data['MobilePhone'] && !(typeof data['MobilePhone'] === 'string' || data['MobilePhone'] instanceof String)) {
            throw new Error("Expected the field `MobilePhone` to be a primitive type in the JSON string but got " + data['MobilePhone']);
        }
        // ensure the json data is a string
        if (data['CareOf'] && !(typeof data['CareOf'] === 'string' || data['CareOf'] instanceof String)) {
            throw new Error("Expected the field `CareOf` to be a primitive type in the JSON string but got " + data['CareOf']);
        }
        // ensure the json data is a string
        if (data['ShippingCountry'] && !(typeof data['ShippingCountry'] === 'string' || data['ShippingCountry'] instanceof String)) {
            throw new Error("Expected the field `ShippingCountry` to be a primitive type in the JSON string but got " + data['ShippingCountry']);
        }
        // ensure the json data is a string
        if (data['ShippingCompany'] && !(typeof data['ShippingCompany'] === 'string' || data['ShippingCompany'] instanceof String)) {
            throw new Error("Expected the field `ShippingCompany` to be a primitive type in the JSON string but got " + data['ShippingCompany']);
        }
        // ensure the json data is a string
        if (data['ShippingOrganizationNumber'] && !(typeof data['ShippingOrganizationNumber'] === 'string' || data['ShippingOrganizationNumber'] instanceof String)) {
            throw new Error("Expected the field `ShippingOrganizationNumber` to be a primitive type in the JSON string but got " + data['ShippingOrganizationNumber']);
        }
        // ensure the json data is a string
        if (data['ShippingFirstName'] && !(typeof data['ShippingFirstName'] === 'string' || data['ShippingFirstName'] instanceof String)) {
            throw new Error("Expected the field `ShippingFirstName` to be a primitive type in the JSON string but got " + data['ShippingFirstName']);
        }
        // ensure the json data is a string
        if (data['ShippingLastName'] && !(typeof data['ShippingLastName'] === 'string' || data['ShippingLastName'] instanceof String)) {
            throw new Error("Expected the field `ShippingLastName` to be a primitive type in the JSON string but got " + data['ShippingLastName']);
        }
        // ensure the json data is a string
        if (data['ShippingEmail'] && !(typeof data['ShippingEmail'] === 'string' || data['ShippingEmail'] instanceof String)) {
            throw new Error("Expected the field `ShippingEmail` to be a primitive type in the JSON string but got " + data['ShippingEmail']);
        }
        // ensure the json data is a string
        if (data['ShippingAddress1'] && !(typeof data['ShippingAddress1'] === 'string' || data['ShippingAddress1'] instanceof String)) {
            throw new Error("Expected the field `ShippingAddress1` to be a primitive type in the JSON string but got " + data['ShippingAddress1']);
        }
        // ensure the json data is a string
        if (data['ShippingAddress2'] && !(typeof data['ShippingAddress2'] === 'string' || data['ShippingAddress2'] instanceof String)) {
            throw new Error("Expected the field `ShippingAddress2` to be a primitive type in the JSON string but got " + data['ShippingAddress2']);
        }
        // ensure the json data is a string
        if (data['ShippingZip'] && !(typeof data['ShippingZip'] === 'string' || data['ShippingZip'] instanceof String)) {
            throw new Error("Expected the field `ShippingZip` to be a primitive type in the JSON string but got " + data['ShippingZip']);
        }
        // ensure the json data is a string
        if (data['ShippingCity'] && !(typeof data['ShippingCity'] === 'string' || data['ShippingCity'] instanceof String)) {
            throw new Error("Expected the field `ShippingCity` to be a primitive type in the JSON string but got " + data['ShippingCity']);
        }
        // ensure the json data is a string
        if (data['ShippingRegion'] && !(typeof data['ShippingRegion'] === 'string' || data['ShippingRegion'] instanceof String)) {
            throw new Error("Expected the field `ShippingRegion` to be a primitive type in the JSON string but got " + data['ShippingRegion']);
        }
        // ensure the json data is a string
        if (data['ShippingPhone'] && !(typeof data['ShippingPhone'] === 'string' || data['ShippingPhone'] instanceof String)) {
            throw new Error("Expected the field `ShippingPhone` to be a primitive type in the JSON string but got " + data['ShippingPhone']);
        }
        // ensure the json data is a string
        if (data['ShippingMobilePhone'] && !(typeof data['ShippingMobilePhone'] === 'string' || data['ShippingMobilePhone'] instanceof String)) {
            throw new Error("Expected the field `ShippingMobilePhone` to be a primitive type in the JSON string but got " + data['ShippingMobilePhone']);
        }
        // ensure the json data is a string
        if (data['ShippingCareOf'] && !(typeof data['ShippingCareOf'] === 'string' || data['ShippingCareOf'] instanceof String)) {
            throw new Error("Expected the field `ShippingCareOf` to be a primitive type in the JSON string but got " + data['ShippingCareOf']);
        }
        // ensure the json data is a string
        if (data['PickupPoint'] && !(typeof data['PickupPoint'] === 'string' || data['PickupPoint'] instanceof String)) {
            throw new Error("Expected the field `PickupPoint` to be a primitive type in the JSON string but got " + data['PickupPoint']);
        }
        // validate the optional field `FreightClass`
        if (data['FreightClass']) { // data not null
          OrderFreightClass.validateJSON(data['FreightClass']);
        }

        return true;
    }


}



/**
 * @member {String} OrderId
 */
OrderCheckoutOrder.prototype['OrderId'] = undefined;

/**
 * @member {String} ExternalOrderId
 */
OrderCheckoutOrder.prototype['ExternalOrderId'] = undefined;

/**
 * @member {String} CartId
 */
OrderCheckoutOrder.prototype['CartId'] = undefined;

/**
 * @member {String} SessionId
 */
OrderCheckoutOrder.prototype['SessionId'] = undefined;

/**
 * @member {Number} SiteId
 */
OrderCheckoutOrder.prototype['SiteId'] = undefined;

/**
 * @member {String} Currency
 */
OrderCheckoutOrder.prototype['Currency'] = undefined;

/**
 * @member {String} Status
 */
OrderCheckoutOrder.prototype['Status'] = undefined;

/**
 * @member {String} IpAddress
 */
OrderCheckoutOrder.prototype['IpAddress'] = undefined;

/**
 * @member {String} Message
 */
OrderCheckoutOrder.prototype['Message'] = undefined;

/**
 * @member {String} InternalMessage
 */
OrderCheckoutOrder.prototype['InternalMessage'] = undefined;

/**
 * @member {String} Locale
 */
OrderCheckoutOrder.prototype['Locale'] = undefined;

/**
 * @member {Array.<module:model/OrderCheckoutOrderRow>} Rows
 */
OrderCheckoutOrder.prototype['Rows'] = undefined;

/**
 * @member {Number} CampaignId
 */
OrderCheckoutOrder.prototype['CampaignId'] = undefined;

/**
 * @member {String} CampaignCode
 */
OrderCheckoutOrder.prototype['CampaignCode'] = undefined;

/**
 * @member {String} CampaignName
 */
OrderCheckoutOrder.prototype['CampaignName'] = undefined;

/**
 * @member {Array.<String>} CampaignIds
 */
OrderCheckoutOrder.prototype['CampaignIds'] = undefined;

/**
 * @member {Array.<String>} CampaignNames
 */
OrderCheckoutOrder.prototype['CampaignNames'] = undefined;

/**
 * @member {Number} CustomerId
 */
OrderCheckoutOrder.prototype['CustomerId'] = undefined;

/**
 * @member {Number} CustomerTypeId
 */
OrderCheckoutOrder.prototype['CustomerTypeId'] = undefined;

/**
 *     0 = Unknown    1 = Female    2 = Male
 * @member {module:model/OrderCheckoutOrder.GenderEnum} Gender
 */
OrderCheckoutOrder.prototype['Gender'] = undefined;

/**
 * @member {Date} DateOfBirth
 */
OrderCheckoutOrder.prototype['DateOfBirth'] = undefined;

/**
 * @member {String} PersonalId
 */
OrderCheckoutOrder.prototype['PersonalId'] = undefined;

/**
 * @member {String} UserAgent
 */
OrderCheckoutOrder.prototype['UserAgent'] = undefined;

/**
 * @member {Object.<String, String>} MetaData
 */
OrderCheckoutOrder.prototype['MetaData'] = undefined;

/**
 * @member {Number} MemberId
 */
OrderCheckoutOrder.prototype['MemberId'] = undefined;

/**
 * @member {Number} PaymentId
 */
OrderCheckoutOrder.prototype['PaymentId'] = undefined;

/**
 * @member {String} TransactionId
 */
OrderCheckoutOrder.prototype['TransactionId'] = undefined;

/**
 * @member {String} SecondaryTransactionId
 */
OrderCheckoutOrder.prototype['SecondaryTransactionId'] = undefined;

/**
 * @member {String} Country
 */
OrderCheckoutOrder.prototype['Country'] = undefined;

/**
 * @member {String} Company
 */
OrderCheckoutOrder.prototype['Company'] = undefined;

/**
 * @member {String} OrganizationNumber
 */
OrderCheckoutOrder.prototype['OrganizationNumber'] = undefined;

/**
 * @member {String} FirstName
 */
OrderCheckoutOrder.prototype['FirstName'] = undefined;

/**
 * @member {String} LastName
 */
OrderCheckoutOrder.prototype['LastName'] = undefined;

/**
 * @member {String} Email
 */
OrderCheckoutOrder.prototype['Email'] = undefined;

/**
 * @member {String} Address1
 */
OrderCheckoutOrder.prototype['Address1'] = undefined;

/**
 * @member {String} Address2
 */
OrderCheckoutOrder.prototype['Address2'] = undefined;

/**
 * @member {String} Zip
 */
OrderCheckoutOrder.prototype['Zip'] = undefined;

/**
 * @member {String} City
 */
OrderCheckoutOrder.prototype['City'] = undefined;

/**
 * @member {String} Region
 */
OrderCheckoutOrder.prototype['Region'] = undefined;

/**
 * @member {String} Phone
 */
OrderCheckoutOrder.prototype['Phone'] = undefined;

/**
 * @member {String} MobilePhone
 */
OrderCheckoutOrder.prototype['MobilePhone'] = undefined;

/**
 * @member {String} CareOf
 */
OrderCheckoutOrder.prototype['CareOf'] = undefined;

/**
 * @member {Number} ShippingId
 */
OrderCheckoutOrder.prototype['ShippingId'] = undefined;

/**
 * @member {String} ShippingCountry
 */
OrderCheckoutOrder.prototype['ShippingCountry'] = undefined;

/**
 * @member {String} ShippingCompany
 */
OrderCheckoutOrder.prototype['ShippingCompany'] = undefined;

/**
 * @member {String} ShippingOrganizationNumber
 */
OrderCheckoutOrder.prototype['ShippingOrganizationNumber'] = undefined;

/**
 * @member {String} ShippingFirstName
 */
OrderCheckoutOrder.prototype['ShippingFirstName'] = undefined;

/**
 * @member {String} ShippingLastName
 */
OrderCheckoutOrder.prototype['ShippingLastName'] = undefined;

/**
 * @member {String} ShippingEmail
 */
OrderCheckoutOrder.prototype['ShippingEmail'] = undefined;

/**
 * @member {String} ShippingAddress1
 */
OrderCheckoutOrder.prototype['ShippingAddress1'] = undefined;

/**
 * @member {String} ShippingAddress2
 */
OrderCheckoutOrder.prototype['ShippingAddress2'] = undefined;

/**
 * @member {String} ShippingZip
 */
OrderCheckoutOrder.prototype['ShippingZip'] = undefined;

/**
 * @member {String} ShippingCity
 */
OrderCheckoutOrder.prototype['ShippingCity'] = undefined;

/**
 * @member {String} ShippingRegion
 */
OrderCheckoutOrder.prototype['ShippingRegion'] = undefined;

/**
 * @member {String} ShippingPhone
 */
OrderCheckoutOrder.prototype['ShippingPhone'] = undefined;

/**
 * @member {String} ShippingMobilePhone
 */
OrderCheckoutOrder.prototype['ShippingMobilePhone'] = undefined;

/**
 * @member {String} ShippingCareOf
 */
OrderCheckoutOrder.prototype['ShippingCareOf'] = undefined;

/**
 * @member {String} PickupPoint
 */
OrderCheckoutOrder.prototype['PickupPoint'] = undefined;

/**
 * @member {Date} DesiredDeliveryDate
 */
OrderCheckoutOrder.prototype['DesiredDeliveryDate'] = undefined;

/**
 * @member {module:model/OrderFreightClass} FreightClass
 */
OrderCheckoutOrder.prototype['FreightClass'] = undefined;

/**
 * @member {Number} FreeShippingLimit
 */
OrderCheckoutOrder.prototype['FreeShippingLimit'] = undefined;

/**
 * @member {Boolean} FreeShippingFromLimit
 */
OrderCheckoutOrder.prototype['FreeShippingFromLimit'] = undefined;

/**
 * @member {Boolean} FreeShippingFromCampaign
 */
OrderCheckoutOrder.prototype['FreeShippingFromCampaign'] = undefined;

/**
 * @member {Number} Sum
 */
OrderCheckoutOrder.prototype['Sum'] = undefined;

/**
 * @member {Number} ExpectedSum
 */
OrderCheckoutOrder.prototype['ExpectedSum'] = undefined;

/**
 * @member {Number} OrderValueIncVat
 */
OrderCheckoutOrder.prototype['OrderValueIncVat'] = undefined;

/**
 * @member {Number} OrderValueExVat
 */
OrderCheckoutOrder.prototype['OrderValueExVat'] = undefined;

/**
 * @member {Number} ItemValueIncVat
 */
OrderCheckoutOrder.prototype['ItemValueIncVat'] = undefined;

/**
 * @member {Number} ItemValueExVat
 */
OrderCheckoutOrder.prototype['ItemValueExVat'] = undefined;

/**
 * @member {Number} DiscountIncVat
 */
OrderCheckoutOrder.prototype['DiscountIncVat'] = undefined;

/**
 * @member {Number} DiscountExVat
 */
OrderCheckoutOrder.prototype['DiscountExVat'] = undefined;

/**
 * @member {Number} PercentDiscount
 */
OrderCheckoutOrder.prototype['PercentDiscount'] = undefined;

/**
 * @member {Number} Balance
 */
OrderCheckoutOrder.prototype['Balance'] = undefined;

/**
 * @member {Number} ShippingFeeIncVat
 */
OrderCheckoutOrder.prototype['ShippingFeeIncVat'] = undefined;

/**
 * @member {Number} ShippingFeeExVat
 */
OrderCheckoutOrder.prototype['ShippingFeeExVat'] = undefined;

/**
 * @member {Number} PaymentFeeIncVat
 */
OrderCheckoutOrder.prototype['PaymentFeeIncVat'] = undefined;

/**
 * @member {Number} PaymentFeeExVat
 */
OrderCheckoutOrder.prototype['PaymentFeeExVat'] = undefined;





/**
 * Allowed values for the <code>Gender</code> property.
 * @enum {Number}
 * @readonly
 */
OrderCheckoutOrder['GenderEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2
};



export default OrderCheckoutOrder;

