/**
 * Geins Management API
 *  Geins Management API is a RESTful api that powers your applications and helps you manage your Geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip Tip With this API, you can build custom applications and integrate with third-party systems, feeds, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API User`. You can create as many API users as you need. Each `API user` is connected to a specific account so you can keep track of operations and manage keys.   You can find all your API credentials in `Geins Merchant Center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are required:   - `Basic Auth`   - `API Key`    All API credentials can be found in `Geins Merchant Center`.  #### Basic Auth A Basic auth `Authorization` header needs to be included in every request. The value should be `Basic <credentials>` where `<credentials>` is the Base64 encoding of your `API username` and `API password` joined by a single colon `:`.   See [Wikipedia](https://en.wikipedia.org/wiki/Basic_access_authentication) for more information on Basic auth.  #### API Key  An `X-ApiKey` header needs to be included in every request. This header should contain the value of your `API key`.  #### Example ```bash curl -X GET \"https://mgmtapi.geins.io/API/Market/List\" \\ -H \"Authorization: Basic [USER-CREDENTIALS-BASE64-ENCODED]\" \\ -H \"X-ApiKey: [API-KEY]\" ``` 
 *
 * The version of the OpenAPI document: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GeinsSdkApiMgmtJavascript);
  }
}(this, function(expect, GeinsSdkApiMgmtJavascript) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GeinsSdkApiMgmtJavascript.SupplierModelsReadSupplier();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SupplierModelsReadSupplier', function() {
    it('should create an instance of SupplierModelsReadSupplier', function() {
      // uncomment below and update the code to test SupplierModelsReadSupplier
      //var instance = new GeinsSdkApiMgmtJavascript.SupplierModelsReadSupplier();
      //expect(instance).to.be.a(GeinsSdkApiMgmtJavascript.SupplierModelsReadSupplier);
    });

    it('should have the property supplierId (base name: "SupplierId")', function() {
      // uncomment below and update the code to test the property supplierId
      //var instance = new GeinsSdkApiMgmtJavascript.SupplierModelsReadSupplier();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new GeinsSdkApiMgmtJavascript.SupplierModelsReadSupplier();
      //expect(instance).to.be();
    });

    it('should have the property address1 (base name: "Address1")', function() {
      // uncomment below and update the code to test the property address1
      //var instance = new GeinsSdkApiMgmtJavascript.SupplierModelsReadSupplier();
      //expect(instance).to.be();
    });

    it('should have the property address2 (base name: "Address2")', function() {
      // uncomment below and update the code to test the property address2
      //var instance = new GeinsSdkApiMgmtJavascript.SupplierModelsReadSupplier();
      //expect(instance).to.be();
    });

    it('should have the property address3 (base name: "Address3")', function() {
      // uncomment below and update the code to test the property address3
      //var instance = new GeinsSdkApiMgmtJavascript.SupplierModelsReadSupplier();
      //expect(instance).to.be();
    });

    it('should have the property zipCode (base name: "ZipCode")', function() {
      // uncomment below and update the code to test the property zipCode
      //var instance = new GeinsSdkApiMgmtJavascript.SupplierModelsReadSupplier();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "Country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new GeinsSdkApiMgmtJavascript.SupplierModelsReadSupplier();
      //expect(instance).to.be();
    });

    it('should have the property contactPerson (base name: "ContactPerson")', function() {
      // uncomment below and update the code to test the property contactPerson
      //var instance = new GeinsSdkApiMgmtJavascript.SupplierModelsReadSupplier();
      //expect(instance).to.be();
    });

    it('should have the property phone1 (base name: "Phone1")', function() {
      // uncomment below and update the code to test the property phone1
      //var instance = new GeinsSdkApiMgmtJavascript.SupplierModelsReadSupplier();
      //expect(instance).to.be();
    });

    it('should have the property phone2 (base name: "Phone2")', function() {
      // uncomment below and update the code to test the property phone2
      //var instance = new GeinsSdkApiMgmtJavascript.SupplierModelsReadSupplier();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "Email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new GeinsSdkApiMgmtJavascript.SupplierModelsReadSupplier();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "ExternalId")', function() {
      // uncomment below and update the code to test the property externalId
      //var instance = new GeinsSdkApiMgmtJavascript.SupplierModelsReadSupplier();
      //expect(instance).to.be();
    });

  });

}));
