/**
 * Geins Management API
 *  Geins Management API is a RESTful api that powers your applications and helps you manage your Geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip Tip With this API, you can build custom applications and integrate with third-party systems, feeds, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API User`. You can create as many API users as you need. Each `API user` is connected to a specific account so you can keep track of operations and manage keys.   You can find all your API credentials in `Geins Merchant Center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are required:   - `Basic Auth`   - `API Key`    All API credentials can be found in `Geins Merchant Center`.  #### Basic Auth A Basic auth `Authorization` header needs to be included in every request. The value should be `Basic <credentials>` where `<credentials>` is the Base64 encoding of your `API username` and `API password` joined by a single colon `:`.   See [Wikipedia](https://en.wikipedia.org/wiki/Basic_access_authentication) for more information on Basic auth.  #### API Key  An `X-ApiKey` header needs to be included in every request. This header should contain the value of your `API key`.  #### Example ```bash curl -X GET \"https://mgmtapi.geins.io/API/Market/List\" \\ -H \"Authorization: Basic [USER-CREDENTIALS-BASE64-ENCODED]\" \\ -H \"X-ApiKey: [API-KEY]\" ``` 
 *
 * The version of the OpenAPI document: v1.10.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GeinsSdkApiMgmtJavascript);
  }
}(this, function(expect, GeinsSdkApiMgmtJavascript) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductModelsReadProduct', function() {
    it('should create an instance of ProductModelsReadProduct', function() {
      // uncomment below and update the code to test ProductModelsReadProduct
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be.a(GeinsSdkApiMgmtJavascript.ProductModelsReadProduct);
    });

    it('should have the property productId (base name: "ProductId")', function() {
      // uncomment below and update the code to test the property productId
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property articleNumber (base name: "ArticleNumber")', function() {
      // uncomment below and update the code to test the property articleNumber
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property names (base name: "Names")', function() {
      // uncomment below and update the code to test the property names
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "DateCreated")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property dateUpdated (base name: "DateUpdated")', function() {
      // uncomment below and update the code to test the property dateUpdated
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property dateFirstAvailable (base name: "DateFirstAvailable")', function() {
      // uncomment below and update the code to test the property dateFirstAvailable
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property active (base name: "Active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property purchasePrice (base name: "PurchasePrice")', function() {
      // uncomment below and update the code to test the property purchasePrice
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property purchasePriceCurrency (base name: "PurchasePriceCurrency")', function() {
      // uncomment below and update the code to test the property purchasePriceCurrency
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property shortTexts (base name: "ShortTexts")', function() {
      // uncomment below and update the code to test the property shortTexts
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property longTexts (base name: "LongTexts")', function() {
      // uncomment below and update the code to test the property longTexts
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property techTexts (base name: "TechTexts")', function() {
      // uncomment below and update the code to test the property techTexts
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "Items")', function() {
      // uncomment below and update the code to test the property items
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property prices (base name: "Prices")', function() {
      // uncomment below and update the code to test the property prices
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property categories (base name: "Categories")', function() {
      // uncomment below and update the code to test the property categories
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property images (base name: "Images")', function() {
      // uncomment below and update the code to test the property images
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property brandId (base name: "BrandId")', function() {
      // uncomment below and update the code to test the property brandId
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property brandName (base name: "BrandName")', function() {
      // uncomment below and update the code to test the property brandName
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property supplierId (base name: "SupplierId")', function() {
      // uncomment below and update the code to test the property supplierId
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property supplierName (base name: "SupplierName")', function() {
      // uncomment below and update the code to test the property supplierName
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property parameterValues (base name: "ParameterValues")', function() {
      // uncomment below and update the code to test the property parameterValues
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property variants (base name: "Variants")', function() {
      // uncomment below and update the code to test the property variants
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property markets (base name: "Markets")', function() {
      // uncomment below and update the code to test the property markets
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property vat (base name: "Vat")', function() {
      // uncomment below and update the code to test the property vat
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property primaryImage (base name: "PrimaryImage")', function() {
      // uncomment below and update the code to test the property primaryImage
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property freightClassId (base name: "FreightClassId")', function() {
      // uncomment below and update the code to test the property freightClassId
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property intrastatCode (base name: "IntrastatCode")', function() {
      // uncomment below and update the code to test the property intrastatCode
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property countryOfOrigin (base name: "CountryOfOrigin")', function() {
      // uncomment below and update the code to test the property countryOfOrigin
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property variantGroupId (base name: "VariantGroupId")', function() {
      // uncomment below and update the code to test the property variantGroupId
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property vatId (base name: "VatId")', function() {
      // uncomment below and update the code to test the property vatId
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "ExternalId")', function() {
      // uncomment below and update the code to test the property externalId
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property activationDate (base name: "ActivationDate")', function() {
      // uncomment below and update the code to test the property activationDate
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property feeds (base name: "Feeds")', function() {
      // uncomment below and update the code to test the property feeds
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property urls (base name: "Urls")', function() {
      // uncomment below and update the code to test the property urls
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property mainCategoryId (base name: "MainCategoryId")', function() {
      // uncomment below and update the code to test the property mainCategoryId
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property relatedProducts (base name: "RelatedProducts")', function() {
      // uncomment below and update the code to test the property relatedProducts
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

    it('should have the property discountCampaigns (base name: "DiscountCampaigns")', function() {
      // uncomment below and update the code to test the property discountCampaigns
      //var instance = new GeinsSdkApiMgmtJavascript.ProductModelsReadProduct();
      //expect(instance).to.be();
    });

  });

}));
