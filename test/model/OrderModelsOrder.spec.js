/**
 * geins-management-api-sdk-js
 *  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
 *
 * The version of the OpenAPI document: v1.7.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GeinsManagementApiSdkJs);
  }
}(this, function(expect, GeinsManagementApiSdkJs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderModelsOrder', function() {
    it('should create an instance of OrderModelsOrder', function() {
      // uncomment below and update the code to test OrderModelsOrder
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be.a(GeinsManagementApiSdkJs.OrderModelsOrder);
    });

    it('should have the property id (base name: "Id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "ExternalId")', function() {
      // uncomment below and update the code to test the property externalId
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property personalId (base name: "PersonalId")', function() {
      // uncomment below and update the code to test the property personalId
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property customerId (base name: "CustomerId")', function() {
      // uncomment below and update the code to test the property customerId
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property customerTypeId (base name: "CustomerTypeId")', function() {
      // uncomment below and update the code to test the property customerTypeId
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "CreatedAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "UpdatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property completedAt (base name: "CompletedAt")', function() {
      // uncomment below and update the code to test the property completedAt
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "Currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property currencyRate (base name: "CurrencyRate")', function() {
      // uncomment below and update the code to test the property currencyRate
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property marketId (base name: "MarketId")', function() {
      // uncomment below and update the code to test the property marketId
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property marketName (base name: "MarketName")', function() {
      // uncomment below and update the code to test the property marketName
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "Language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property orderTotal (base name: "OrderTotal")', function() {
      // uncomment below and update the code to test the property orderTotal
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property expectedSum (base name: "ExpectedSum")', function() {
      // uncomment below and update the code to test the property expectedSum
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property vATTotal (base name: "VATTotal")', function() {
      // uncomment below and update the code to test the property vATTotal
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property orderValueIncVat (base name: "OrderValueIncVat")', function() {
      // uncomment below and update the code to test the property orderValueIncVat
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property orderValueExVat (base name: "OrderValueExVat")', function() {
      // uncomment below and update the code to test the property orderValueExVat
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property itemValueIncVat (base name: "ItemValueIncVat")', function() {
      // uncomment below and update the code to test the property itemValueIncVat
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property itemValueExVat (base name: "ItemValueExVat")', function() {
      // uncomment below and update the code to test the property itemValueExVat
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property discount (base name: "Discount")', function() {
      // uncomment below and update the code to test the property discount
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property discountExVat (base name: "DiscountExVat")', function() {
      // uncomment below and update the code to test the property discountExVat
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property fromBalance (base name: "FromBalance")', function() {
      // uncomment below and update the code to test the property fromBalance
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property shippingFee (base name: "ShippingFee")', function() {
      // uncomment below and update the code to test the property shippingFee
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property shippingFeeExVat (base name: "ShippingFeeExVat")', function() {
      // uncomment below and update the code to test the property shippingFeeExVat
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property paymentFee (base name: "PaymentFee")', function() {
      // uncomment below and update the code to test the property paymentFee
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property paymentFeeExVat (base name: "PaymentFeeExVat")', function() {
      // uncomment below and update the code to test the property paymentFeeExVat
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property message (base name: "Message")', function() {
      // uncomment below and update the code to test the property message
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property orderMessages (base name: "OrderMessages")', function() {
      // uncomment below and update the code to test the property orderMessages
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property paymentDetails (base name: "PaymentDetails")', function() {
      // uncomment below and update the code to test the property paymentDetails
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property shippingDetails (base name: "ShippingDetails")', function() {
      // uncomment below and update the code to test the property shippingDetails
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property shippingAddress (base name: "ShippingAddress")', function() {
      // uncomment below and update the code to test the property shippingAddress
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property billingAddress (base name: "BillingAddress")', function() {
      // uncomment below and update the code to test the property billingAddress
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property rows (base name: "Rows")', function() {
      // uncomment below and update the code to test the property rows
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property refunds (base name: "Refunds")', function() {
      // uncomment below and update the code to test the property refunds
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property ip (base name: "Ip")', function() {
      // uncomment below and update the code to test the property ip
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property userAgent (base name: "UserAgent")', function() {
      // uncomment below and update the code to test the property userAgent
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property serviceLocation (base name: "ServiceLocation")', function() {
      // uncomment below and update the code to test the property serviceLocation
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property campaignCode (base name: "CampaignCode")', function() {
      // uncomment below and update the code to test the property campaignCode
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property campaignCodeId (base name: "CampaignCodeId")', function() {
      // uncomment below and update the code to test the property campaignCodeId
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property percent (base name: "Percent")', function() {
      // uncomment below and update the code to test the property percent
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property desiredDeliveryDate (base name: "DesiredDeliveryDate")', function() {
      // uncomment below and update the code to test the property desiredDeliveryDate
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "Gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property cartId (base name: "CartId")', function() {
      // uncomment below and update the code to test the property cartId
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property sessionId (base name: "SessionId")', function() {
      // uncomment below and update the code to test the property sessionId
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property externalOrderStatus (base name: "ExternalOrderStatus")', function() {
      // uncomment below and update the code to test the property externalOrderStatus
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property campaignIds (base name: "CampaignIds")', function() {
      // uncomment below and update the code to test the property campaignIds
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property campaignNames (base name: "CampaignNames")', function() {
      // uncomment below and update the code to test the property campaignNames
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property metaData (base name: "MetaData")', function() {
      // uncomment below and update the code to test the property metaData
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

    it('should have the property publicId (base name: "PublicId")', function() {
      // uncomment below and update the code to test the property publicId
      //var instance = new GeinsManagementApiSdkJs.OrderModelsOrder();
      //expect(instance).to.be();
    });

  });

}));
